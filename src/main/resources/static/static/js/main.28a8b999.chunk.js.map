{"version":3,"sources":["util/Constants.js","features/Login/LoginActions.js","features/Login/LoginConstants.js","features/Login/SignInMenu.js","features/navbar/Navbar.js","features/Login/RegisterForm.js","features/Login/LoginForm.js","features/Login/AuthHome.js","features/Home/HomeActions.js","features/Home/HomeConstants.js","features/Jobs/JobList/Job.js","features/Jobs/JobList/JobList.js","features/Filters/FilterByCompanies.js","features/Filters/FilterBySalary.js","features/Filters/FilterByExperience.js","features/Filters/AccordionLeftFilter.js","features/Filters/FilterBySkill.js","features/EmployerList/EmployerList.js","features/Filters/AccordionRightFilter.js","features/Home/SearchSkills.js","features/Home/SearchCities.js","features/Jobs/JobsDashboard/Dashboard.js","features/Home/HomeForSearchers.js","features/Home/HomeForPosters.js","features/Home/Home.js","features/EmployerList/EmployerListHome.js","data/dropdownCities.js","features/Jobs/CreateJob/CreateJobForm.js","features/User/Profile.js","features/User/MyJobs.js","features/User/UserActions.js","features/User/UserConstants.js","features/User/Jobs/JobDetails.js","features/User/UserDashboard.js","Test/TestComponent.js","Test/TestActions.js","Test/TestConstants.js","App.js","Test/TestReducer.js","features/Home/HomeReducer.js","features/Login/AuthReducer.js","features/User/UserReducer.js","reducers/RootReducer.js","index.js","store/ConfigureStore.js"],"names":["API_BASE_URL","setItemsLoading","type","doLogout","mapDispatchToProps","SignInMenu","handleSignOut","props","history","push","user","this","Menu","Item","position","Image","avatar","spaced","src","Dropdown","pointing","text","name","as","Link","to","icon","onClick","Component","withRouter","connect","state","Navbar","autheticated","auth","inverted","fixed","Container","header","alt","Button","basic","doRegister","dispatch","axios","method","url","data","config","headers","then","response","payload","catch","err","errorMessage","addError","error","RegisterForm","email","password","password1","handleOnChange","e","setState","target","value","handleSubmit","message","Grid","textAlign","style","height","Column","maxWidth","Header","registrationSuceessMessage","color","Form","className","Input","fluid","iconPosition","placeholder","onChange","primary","size","doLogin","LoginForm","console","log","AuthHome","loading","Dimmer","active","Loader","marginBottom","marginTop","columns","width","getJobs","skill","city","company","exp","salary","getRecentJobs","uploadResume","file","jobId","FormData","append","res","dismissJobAppliedSuceesModal","Job","id","fileName","files","job","fomatdate","date","day","getDate","monthIndex","getMonth","year","getFullYear","closeModal","disableApplyButton","bind","jobAppliedSucessModal","jobs","img","Segment","Group","circular","onError","onerror","Content","fontSize","whiteSpace","jobTitle","float","Description","skills","toString","jobDescription","Icon","experienceFrom","experienceTo","salaryFrom","salaryTo","posterName","Date","postedOn","Label","htmlFor","multiple","event","floated","disabled","content","Modal","open","Actions","JobList","jobListing","map","key","setCompany","FilterByCompanies","handleChange","companiesList","companies","companyItr","Field","Checkbox","radio","label","checked","setSal","sal","FilterBySalary","salariesList","salaries","salaryItr","setExp","FilterByExperience","experienceList","experiences","experience","AccordionLeftFilter","activeIndexes","handleClick","titleProps","index","newIndex","currentIndexPosition","indexOf","splice","Accordion","Title","includes","EmployerList","List","selection","verticalAlign","AccordionRightFilter","activeIndex","initialState","isLoading","results","setSkill","SearchSkills","componentDidMount","handleResultSelect","result","title","handleSearchChange","setTimeout","length","re","RegExp","_","escapeRegExp","filter","source","test","widths","Search","onResultSelect","onSearchChange","debounce","leading","setCity","SearchCities","defaultValue","clearFilters","Dashboard","display","searchJobs","rounded","HomeForSearchers","skillError","cityError","undefined","getMostRecentJobs","HomeForPosters","Home","mobile","tablet","computer","cities","addJob","dismissJobCreatedSuccessModal","jobPost","CreateJobForm","address","posterEmail","isError","launchSuccessModal","handleOnCityChange","handleOnExpFromChange","handleOnExpToChange","handleOnSalaryFromChange","handleOnSalaryToChange","handleNameChange","handleEmailChange","handleJobTitleChange","handleJobDescChange","handleSkillsChange","split","validateInput","jobCreatedSucessModal","TextArea","rows","options","marginLeft","Profile","Message","getJobsByEmail","MyJobs","handleViewDetails","Table","celled","Row","HeaderCell","Body","warning","Cell","GridColumn","JobDetails","ownProps","jobPostId","match","params","UserDashboard","path","component","exact","incrementCounter","counter","incrementCounterAsync","decrementCounter","TestComponent","handleIncrementCounter","handleDecrementCounter","localData","positive","negative","App","TestRedcuer","action","RootReducer","combineReducers","JSON","stringify","rootElement","document","getElementById","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ConfigureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.28a8b999.chunk.js","sourcesContent":["export const API_BASE_URL = 'http://localhost:8080'\r\n//'https://npnitinjobportal.herokuapp.com';","import {DO_LOGIN,DO_LOGOUT,DO_REGISTER,LODING, DISABLE_LOADING, ADD_ERROR} from './LoginConstants';\r\nimport {API_BASE_URL} from '../../util/Constants';\r\nimport axios from \"axios\";\r\n\r\nexport const doLogin = (user) => dispatch=>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/user/login',\r\n        data:user,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:DO_LOGIN,\r\n        payload:response.data\r\n    })).catch(err => dispatch({\r\n        type:ADD_ERROR,\r\n        payload:err.response.data.errorMessage\r\n    }))\r\n}\r\n\r\nexport const doRegister = (user) =>dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/user/register',\r\n        data:user,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:DO_REGISTER,\r\n        payload:response.data\r\n    })).catch(err => dispatch({\r\n        type:ADD_ERROR,\r\n        payload:err.response.data.errorMessage\r\n    }))\r\n}\r\n\r\nexport const getJobsbyEmail = (email) =>{\r\n    \r\n}\r\nexport const setItemsLoading = () =>{\r\n    return{\r\n        type:LODING\r\n    }\r\n}\r\n\r\nexport const doLogout = () =>{\r\n    return{\r\n        type:DO_LOGOUT\r\n    }\r\n}\r\nexport const addError = (error) =>{\r\n    return{\r\n        type:ADD_ERROR,\r\n        payload:error\r\n    }\r\n}","export const DO_LOGIN='DO_LOGIN';\r\nexport const DO_LOGOUT='DO_LOGOUT';\r\nexport const DO_REGISTER='DO_REGISTER';\r\nexport const LODING ='LOADING';\r\nexport const DISABLE_LOADING='DISABLE_LOADING';\r\nexport const GET_JOBS_BY_EMAIl='GET_JOBS_BY_EMAIl';\r\nexport const ADD_ERROR='ADD_ERROR';","import React, { Component } from 'react'\r\nimport { Menu,Image,Dropdown } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { doLogout} from '../Login/LoginActions';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nconst mapStateToProps =(state)=>({\r\n})\r\nconst mapDispatchToProps ={\r\n    doLogout,\r\n}\r\n class SignInMenu extends Component {\r\n    handleSignOut = () =>{\r\n        this.props.doLogout();\r\n        this.props.history.push('/');\r\n      }\r\n    render() {\r\n        const{user} = this.props;\r\n        return (\r\n            <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src='/assets/user.png' />\r\n            <Dropdown pointing=\"top left\" text={user.name}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item text=\"Create New Job\" as={Link} to='/user/createnewjob' icon=\"plus\" />\r\n                <Dropdown.Item text=\"My Jobs\" as={Link} to='/user/myjobs' icon=\"calendar\" />\r\n                <Dropdown.Item text=\"My Profile\" as={Link} to='/user/profile' icon=\"user\" />\r\n                <Dropdown.Item text=\"Settings\" icon=\"settings\" />\r\n                <Dropdown.Item text=\"Sign Out\" onClick={this.handleSignOut} icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(SignInMenu));","import React, {Component} from 'react';\r\nimport { Menu,Container,Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport SignInMenu from '../Login/SignInMenu';\r\nimport { doLogout} from '../Login/LoginActions';\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  doLogout,\r\n}\r\nclass Navbar extends Component {\r\n  render() {\r\n    const{autheticated} = this.props.auth;\r\n    const{user} = this.props.auth;\r\n    return (\r\n        <div>\r\n             <Menu inverted fixed=\"top\">\r\n                    <Container>\r\n                      <Menu.Item header as={Link} to=\"/\" >ReferralJobz\r\n                        <img src=\"assets/logo.png\" alt=\"logo\" />\r\n                      </Menu.Item>\r\n                      <Menu.Item>Find Salaries</Menu.Item>\r\n                      <Menu.Item>Company Reviews</Menu.Item>\r\n                      <Menu.Item>Interview Questions</Menu.Item>\r\n                      <Menu.Item>Interview Questions</Menu.Item>\r\n                      <Menu.Item position=\"right\">\r\n                        <Button  basic inverted as={Link} to='/user/createnewjob'>Add Job</Button>\r\n                       {/*  <Button  basic inverted as={Link} to=\"/dashboard\">Search Job</Button> */}\r\n                        {\r\n                        autheticated?\r\n                        <SignInMenu user={user}/>:\r\n                        <Button  basic inverted as={Link} to=\"/login\">Login/Register</Button>\r\n                        \r\n                        }\r\n                      </Menu.Item>\r\n\r\n                    </Container>\r\n                  </Menu>\r\n        </div>\r\n    );\r\n}\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar);\r\n","import React, { Component } from 'react'\r\nimport { Grid, Header, Image, Form, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { doRegister,addError } from  './LoginActions';\r\n\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  doRegister,\r\n  addError\r\n}\r\nclass RegisterForm extends Component {\r\n  state={\r\n    name:'',\r\n    email:'',\r\n    password:'',\r\n    password1:''\r\n  }\r\n  handleOnChange =(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  handleSubmit = () =>{\r\n    const{name,email,password,password1}=this.state;\r\n    const user={\r\n      name,email,password\r\n    }\r\n    if(name && email && password && password1){\r\n      if(password !== password1){\r\n        this.props.addError('Both passwords not match');\r\n      }else{\r\n        this.props.doRegister(user);\r\n      }\r\n    }else{\r\n      this.props.addError('All fields are mandatory');\r\n    }\r\n    \r\n    \r\n  }\r\n  render() {\r\n    const{message} = this.props\r\n    return (\r\n      <Grid textAlign='center' style={{ height: '100vh'}}>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header>{this.props.registrationSuceessMessage}</Header>\r\n          <Header as='h5' color='teal' textAlign='center'>\r\n            <Image src='assets/logo.png' /> Register if do not have existing account\r\n              </Header>\r\n          <Form className='createJobform'>\r\n\r\n            <Form.Input\r\n              fluid\r\n              icon='user'\r\n              iconPosition='left'\r\n              placeholder='Enter Your Name'\r\n              name='name'\r\n              onChange={this.handleOnChange} />\r\n            <Form.Input\r\n              fluid\r\n              icon='mail'\r\n              iconPosition='left'\r\n              placeholder='Enter your email'\r\n              type='email'\r\n              name='email'\r\n              onChange={this.handleOnChange}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Enter password'\r\n              type='password'\r\n              name='password'\r\n              onChange={this.handleOnChange}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Confirm password'\r\n              type='password'\r\n              name='password1'\r\n              onChange={this.handleOnChange}\r\n            />\r\n\r\n            <Button primary fluid size='large' onClick={this.handleSubmit}>\r\n              Register\r\n                  </Button>\r\n\r\n          </Form>\r\n\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterForm);","import React, { Component } from 'react';\r\nimport { Grid, Header, Image, Form, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { doLogin } from './LoginActions';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  doLogin,\r\n}\r\nclass LoginForm extends Component {\r\n  state={\r\n    email:'',\r\n    password:''\r\n  }\r\n\r\n  handleOnChange = (e) =>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = () =>{\r\n    const {email,password} = this.state;\r\n    const user ={\r\n      email,password\r\n    }\r\n    this.props.doLogin(user);\r\n  }\r\n  render() {\r\n    const{ autheticated } =this.props.auth;\r\n    console.log(autheticated);\r\n    if(autheticated){\r\n      this.props.history.push('/user/myjobs');\r\n    }\r\n    return (\r\n      <div>\r\n        <Grid textAlign='center' style={{ height: '100vh'}}>\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h5' color='teal' textAlign='center'>\r\n              <Image src='assets/logo.png' /> Log-in to your account if you already have account\r\n      </Header>\r\n            <Form className='createJobform'>\r\n\r\n              <Form.Input\r\n                fluid\r\n                icon='mail'\r\n                iconPosition='left'\r\n                placeholder='E-mail address'\r\n                name='email' \r\n                onChange={this.handleOnChange}/>\r\n\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='Password'\r\n                name='password'\r\n                type='password'\r\n                onChange={this.handleOnChange}\r\n              />\r\n\r\n              <Button primary fluid size='large' onClick={this.handleSubmit}>\r\n                Login\r\n          </Button>\r\n\r\n            </Form>\r\n\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(LoginForm));\r\n","import React, { Component } from 'react';\r\nimport { Grid ,Container,Dimmer,Loader,Header} from 'semantic-ui-react';\r\nimport RegisterForm from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    auth:state.auth\r\n})\r\n\r\n class AuthHome extends Component {\r\n    render() {\r\n        const {loading} = this.props.auth;\r\n        const{ error } =this.props.auth;\r\n        const{ registrationSuceessMessage } =this.props.auth;\r\n        return (\r\n            <Container>\r\n                 {loading===true ? <Dimmer active>\r\n                    <Loader />\r\n                </Dimmer>:''}\r\n                <Header as='h3' textAlign='center' color='teal'>You can apply to job without login, but in order to add new job,you need to login</Header>\r\n                <Header as='h5' textAlign='center' color='red' style={{marginBottom:'-10%'}}>{error}</Header>\r\n                <Header as='h5' textAlign='center' color='green' style={{marginTop:'10%'}}>{registrationSuceessMessage}</Header>\r\n                <Grid columns={2}>\r\n                    <Grid.Column width={8}>\r\n                        <RegisterForm />\r\n                    </Grid.Column>\r\n                   \r\n                    <Grid.Column width={8}>\r\n                        <LoginForm />\r\n                    </Grid.Column>\r\n                </Grid>\r\n               \r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{})(AuthHome);","import {\r\n     GET_JOBS,ITEMS_LOADING,SET_CITY,\r\n     SET_SKILL, ADD_JOB,DESABLE_LOADING,\r\n     LAUNCH_JOB_APPLIED_SUCCESS_MODAL,\r\n     DISMISS_JOB_APPLIED_SUCCESS_MODAL, \r\n     LAUNCH_JOB_CREATED_SUCCESS_MODAL,\r\n     DISMISS_JOB_CREATED_SUCCESS_MODAL,\r\n     SET_COMPANY, \r\n     SET_SAL,\r\n     SET_EXP,\r\n     CLEAR_FILTERS,\r\n     GET_RECENT_JOBS}\r\n      from \"./HomeConstants\"\r\nimport {API_BASE_URL} from '../../util/Constants';\r\nimport axios from \"axios\";\r\n\r\nexport const getJobs = (skill,city,company,exp,salary) => dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost/search?city='+city+'&skill='+skill+'&company='+company+'&exp='+exp+'&sal='+salary,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:GET_JOBS,\r\n        payload:response\r\n    })).catch(err => dispatch({\r\n        type:DESABLE_LOADING\r\n    }))\r\n}\r\nexport const getRecentJobs = () =>dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'GET',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost/recent?size=10',\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:GET_RECENT_JOBS,\r\n        payload:response\r\n    })).catch(err => dispatch({\r\n        type:DESABLE_LOADING\r\n    }))\r\n}\r\nexport const setItemsLoading = () =>{\r\n    return{\r\n        type:ITEMS_LOADING\r\n    }\r\n}\r\n\r\nexport const setCity = (city) =>{\r\n    return {\r\n        type:SET_CITY,\r\n        payload:city\r\n    }\r\n}\r\nexport const setCompany = (company) =>{\r\n    return{\r\n        type:SET_COMPANY,\r\n        payload:company\r\n    }\r\n}\r\nexport const setSal = (sal) =>{\r\n    return{\r\n        type:SET_SAL,\r\n        payload:sal\r\n    }\r\n}\r\nexport const setExp = (exp) =>{\r\n    return{\r\n        type:SET_EXP,\r\n        payload:exp\r\n    }\r\n}\r\nexport const setSkill = (skill) =>{\r\n    return{\r\n        type:SET_SKILL,\r\n        payload:skill\r\n    }\r\n}\r\n\r\nexport const addJob = (job) => dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost',\r\n        data: job,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:LAUNCH_JOB_CREATED_SUCCESS_MODAL\r\n    }))\r\n}\r\nexport const uploadResume = (file,jobId) =>dispatch=>{\r\n    dispatch(setItemsLoading());\r\n    const data = new FormData()\r\n    data.append('selectedFile', file, file.name)\r\n    axios({\r\n      method: 'post',\r\n      url: API_BASE_URL+'/api/jobportal/jobpost/uploadFile?jobId=' + jobId,\r\n      data: data\r\n    })\r\n      .then(res=>dispatch({\r\n        type:LAUNCH_JOB_APPLIED_SUCCESS_MODAL\r\n    }))\r\n}\r\n\r\nexport const dismissJobAppliedSuceesModal =()=>{\r\n    return{\r\n        type:DISMISS_JOB_APPLIED_SUCCESS_MODAL\r\n    }\r\n}\r\n\r\nexport const dismissJobCreatedSuccessModal = () =>{\r\n    return{\r\n        type:DISMISS_JOB_CREATED_SUCCESS_MODAL\r\n    }\r\n}\r\nexport const clearFilters =()=>{\r\n    return{\r\n        type:CLEAR_FILTERS\r\n    }\r\n}","export const GET_CONFIG='GET_CONFIG';\r\nexport const GET_JOBS='GET_JOBS';\r\nexport const GET_RECENT_JOBS='GET_RECENT_JOBS'\r\nexport const ITEMS_LOADING='ITEMS_LOADING';\r\nexport const SET_CITY='SET_CITY';\r\nexport const SET_SKILL='SET_SKILL';\r\nexport const SET_COMPANY='SET_COMPANY';\r\nexport const SET_EXP='SET_EXP';\r\nexport const SET_SAL='SET_SAL';\r\nexport const ADD_JOB='ADD_JOB';\r\nexport const DESABLE_LOADING='DESABLE_LOADING';\r\nexport const UPLOAD_RESUME='UPLOAD_RESUME';\r\nexport const LAUNCH_JOB_APPLIED_SUCCESS_MODAL='LAUNCH_JOB_APPLIED_SUCCESS_MODAL';\r\nexport const DISMISS_JOB_APPLIED_SUCCESS_MODAL='DISMISS_JOB_APPLIED_SUCCESS_MODAL';\r\nexport const LAUNCH_JOB_CREATED_SUCCESS_MODAL='LAUNCH_JOB_CREATED_SUCCESS_MODAL';\r\nexport const DISMISS_JOB_CREATED_SUCCESS_MODAL='DISMISS_JOB_CREATED_SUCCESS_MODAL';\r\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';","import React, { Component } from 'react';\r\nimport { Button, Segment, Item, Icon, Grid, Label, Header,Modal } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { uploadResume,dismissJobAppliedSuceesModal } from '../../Home/HomeActions';\r\n\r\n\r\nconst mapStateToProps =(state)=>({\r\n  jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  uploadResume,\r\n  dismissJobAppliedSuceesModal\r\n}\r\nclass Job extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      fileName: '',\r\n      file: {},\r\n      jobId: '',\r\n      disableApplyButton: true,\r\n    };\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n  }\r\n  handleOnChange = (id, e) => {\r\n    this.setState({\r\n      fileName: e.target.files[0].name,\r\n      file: e.target.files[0],\r\n      jobId: id\r\n    });\r\n  }\r\n\r\n  uploadResume = (job) => {\r\n    this.props.uploadResume(this.state.file,job.id);\r\n  }\r\n  fomatdate = (date) => {\r\n    var monthNames = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n\r\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n  }\r\n  closeModal = () =>{\r\n    this.props.dismissJobAppliedSuceesModal()\r\n  }\r\n\r\n  render() {\r\n   const { job } = this.props;\r\n   const{ jobAppliedSucessModal} = this.props.jobs;\r\n   let img = 'https://logo.clearbit.com/'+job.company+'.com';\r\n   let defaultImage ='https://logo.clearbit.com/company.com';\r\n    return (\r\n      <Segment.Group>\r\n        <Segment id={job.id}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image size=\"tiny\" circular src={img} onError={(e)=>{e.target.onerror = null; e.target.src=defaultImage}} />\r\n              <Item.Content>\r\n                <Grid>\r\n                  <Grid.Column width={13}>\r\n                    <Item.Header style={{ fontSize: '20px' }}><pre style={{whiteSpace:'pre-line'}}>{job.jobTitle}</pre></Item.Header>\r\n                  </Grid.Column>\r\n                  <Grid.Column width={1} style={{ float: 'right' }}>\r\n\r\n                  </Grid.Column>\r\n                </Grid>\r\n\r\n                <Item.Description>\r\n                  <span style={{ fontSize: '15px' }}><pre>{job.company},{job.city}</pre></span>\r\n                </Item.Description>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n\r\n        <Segment >\r\n          <span style={{ fontSize: '15px' }}><pre style={{whiteSpace:'pre-line'}}><b>Skills:</b>{job.skills.toString()}</pre></span>\r\n        </Segment>\r\n        <Segment >\r\n          <span style={{ fontSize: '15px' }}><b>Job Description:</b><pre style={{whiteSpace:'pre-line'}}>{job.jobDescription}</pre></span>\r\n        </Segment>\r\n        <Segment>\r\n          <span>\r\n            <Icon name=\"user icon\" /> {job.experienceFrom} - {job.experienceTo} (years)\r\n                            <Icon name=\"rupee sign icon\" /> {job.salaryFrom || 'NA'} - {job.salaryTo} (lakhs)\r\n                            <span style={{ float: 'right' }}>Posted By <b>{job.posterName}</b> on <b>{this.fomatdate(new Date(job.postedOn))}</b> </span>\r\n          </span>\r\n        </Segment>\r\n        <Segment>\r\n          <Header color='teal' as='h5'>To apply for this job, Upload your resume and click on apply</Header>\r\n          <Label as=\"label\" basic htmlFor=\"upload\" size='large'>\r\n\r\n            <input\r\n              id=\"upload\"\r\n              multiple\r\n              type=\"file\"\r\n              name=\"selectedFile\"\r\n              alt={job.id}\r\n              onChange={(event) => this.handleOnChange(job.id, event)}\r\n            />\r\n          </Label>\r\n          <Button floated='right' disabled={job.id !== this.state.jobId ? true : false} primary content=\"Apply\" onClick={() => this.uploadResume(job)} />\r\n        </Segment>\r\n\r\n        <Modal\r\n          open={jobAppliedSucessModal}\r\n          size=\"small\">\r\n          <Modal.Content>\r\n            <p>\r\n              You have succesfully applied for the job\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button primary onClick={this.closeModal}>\r\n              <Icon name='close' /> Close\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Segment.Group>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Job);","import React, { Component, Fragment } from 'react'\r\nimport Job from './Job';\r\nimport { connect } from 'react-redux';\r\nimport { getJobs } from '../../Home/HomeActions';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    jobListing: state.jobs.jobs.data,\r\n    jobs: state.jobs\r\n})\r\nconst mapDispatchToProps = {\r\n    getJobs,\r\n}\r\nclass JobList extends Component {\r\n    componentDidMount() {\r\n        // this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.company,this.props.exp,this.props.salary);\r\n    }\r\n    render() {\r\n        const { jobListing } = this.props;\r\n        return (\r\n            <Fragment>\r\n                {jobListing && jobListing.map((job) => (\r\n                    <Job key={job.id} job={job} />\r\n                ))}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobList);","import React, { Component,Fragment } from 'react';\r\nimport { Checkbox,Form } from 'semantic-ui-react';\r\nimport { setCompany,getJobs } from '../Home/HomeActions';\r\nimport { connect } from 'react-redux'\r\nimport companies from '../../data/companies.json';\r\n\r\n\r\nconst mapStateToProps =(state)=>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    setCompany,\r\n    getJobs\r\n}\r\n\r\nclass FilterByCompanies extends Component {\r\n    state = {\r\n        value:{}\r\n    }\r\n    handleChange = (e, { value }) => {\r\n        this.setState({\r\n            value:value\r\n        })\r\n        this.props.setCompany(value);\r\n        this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,value,this.props.jobs.exp,this.props.jobs.salary);\r\n    }\r\n    render() {\r\n        const {company} = this.props.jobs;\r\n        let companiesList = companies.map((companyItr)=>(\r\n            <Form.Field>\r\n              <Checkbox\r\n                radio\r\n                label={companyItr}\r\n                name='checkboxRadioGroup'\r\n                value={companyItr}\r\n                checked={company === companyItr}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Field>\r\n        )) \r\n        return (\r\n            <Fragment>\r\n                <Form>\r\n                {companiesList}\r\n                </Form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FilterByCompanies);","import React, { Component } from 'react'\r\nimport { Checkbox ,Form} from 'semantic-ui-react';\r\nimport salaries from '../../data/salaries.json';\r\nimport { setSal,getJobs } from '../Home/HomeActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state)=>({\r\n  jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  setSal,\r\n  getJobs\r\n}\r\n class FilterBySalary extends Component {\r\n\r\n    state = {\r\n      value:{}\r\n    }\r\n  handleChange = (e, {value} ) => {\r\n    this.setState({ \r\n      value:value \r\n    })\r\n    this.props.setSal(value);\r\n    this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.jobs.company,this.props.jobs.exp,value);\r\n  }\r\n\r\n    render() {\r\n      const {salary} = this.props.jobs;\r\n      let salariesList = salaries.map((salaryItr)=>(\r\n        <Form.Field>\r\n          <Checkbox\r\n            radio\r\n            label={salaryItr}\r\n            name='checkboxRadioGroup'\r\n            value={salaryItr}\r\n            checked={salary === salaryItr}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Form.Field>\r\n      ))\r\n        return (\r\n        <Form>\r\n        {salariesList}\r\n      </Form>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FilterBySalary);","import React, { Component,Fragment } from 'react'\r\nimport { Checkbox,Form } from 'semantic-ui-react';\r\nimport experiences from '../../data/exp.json';\r\nimport { setExp,getJobs } from '../Home/HomeActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    setExp,\r\n    getJobs\r\n}\r\nclass FilterByExperience extends Component {\r\n    state = {\r\n        value:{}\r\n    }\r\n    handleChange = (e,{value}) =>{\r\n        this.setState({ \r\n            value:value \r\n        })\r\n        this.props.setExp(value);\r\n        this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.company,value,this.props.jobs.salary);\r\n    } \r\n    render() {\r\n        const {exp} = this.props.jobs;\r\n        let experienceList = experiences.map((experience)=>(\r\n            <Form.Field>\r\n              <Checkbox\r\n                radio\r\n                label={experience}\r\n                name='checkboxRadioGroup'\r\n                value={experience}\r\n                checked={exp === experience}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Field>\r\n        ))\r\n        return (\r\n            <Fragment>\r\n                <Form>\r\n                    {experienceList}\r\n            </Form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FilterByExperience);","import React, { Component } from 'react'\r\nimport { Accordion, Icon } from 'semantic-ui-react'\r\nimport FilterByCompanies from './FilterByCompanies'\r\nimport FilterBySalary from './FilterBySalary'\r\nimport FilterByExperience from './FilterByExperience'\r\n\r\n class AccordionLeftFilter extends Component {\r\n  state = { activeIndexes: [0,1,2,3] }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndexes } = this.state;\r\n    const newIndex = activeIndexes;\r\n\r\n    const currentIndexPosition = activeIndexes.indexOf(index);\r\n    if (currentIndexPosition > -1) {\r\n      newIndex.splice(currentIndexPosition, 1);\r\n    } else {\r\n      newIndex.push(index);\r\n    }\r\n\r\n    this.setState({ activeIndexes: newIndex });\r\n  }\r\n\r\n  render() {\r\n    const { activeIndexes } = this.state\r\n\r\n    return (\r\n      <Accordion>\r\n        <Accordion.Title style={{fontSize:'18px'}}\r\n          active={activeIndexes.includes(0)}\r\n          index={0}\r\n          onClick={this.handleClick}>\r\n          <Icon name='dropdown' />\r\n              Salary(lakhs)\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndexes.includes(0)}>\r\n          <FilterBySalary />\r\n        </Accordion.Content>\r\n\r\n       {/*  <Accordion.Title style={{fontSize:'18px'}}\r\n          active={activeIndexes.includes(2)}\r\n          index={2}\r\n          onClick={this.handleClick}>\r\n          <Icon name='dropdown' />\r\n          Companies\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndexes.includes(2)}>\r\n         <FilterByCompanies />\r\n        </Accordion.Content> */}\r\n\r\n\r\n        <Accordion.Title style={{fontSize:'18px'}}\r\n          active={activeIndexes.includes(2)}\r\n          index={2}\r\n          onClick={this.handleClick}>\r\n          <Icon name='dropdown' />\r\n          Experience(years)\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndexes.includes(2)}>\r\n         <FilterByExperience />\r\n        </Accordion.Content>\r\n      </Accordion>\r\n\r\n      \r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default AccordionLeftFilter;","import React, { Component } from 'react'\r\nimport {Checkbox } from 'semantic-ui-react';\r\nclass FilterBySkill extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FilterBySkill;\r\n","import React, { Component,Fragment } from 'react'\r\nimport { List,Image } from 'semantic-ui-react';\r\n\r\nclass EmployerList extends Component {\r\n    render() {\r\n        return (\r\n           <Fragment>\r\n               Top Employers\r\n        <List selection verticalAlign='middle'>\r\n       \r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/wipro.com' />\r\n        <List.Content>\r\n            <List.Header>Wipro</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/tcs.com' />\r\n        <List.Content>\r\n            <List.Header>TCS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/amazon.com' />\r\n        <List.Content>\r\n            <List.Header>Amazon</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/persistent.com' />\r\n        <List.Content>\r\n            <List.Header>Persistent</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/ibm.com' />\r\n        <List.Content>\r\n            <List.Header>IBM</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/capgemini.com' />\r\n        <List.Content>\r\n            <List.Header>Capgemini</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/citibank.com' />\r\n        <List.Content>\r\n            <List.Header>Citi Bank</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/ubs.com' />\r\n        <List.Content>\r\n            <List.Header>UBS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/hcl.com' />\r\n        <List.Content>\r\n            <List.Header>HCL</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/atos.net' />\r\n        <List.Content>\r\n            <List.Header>Atos</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/xoriant.com' />\r\n        <List.Content>\r\n            <List.Header>Xoriant</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/barclays.com' />\r\n        <List.Content>\r\n            <List.Header>Barclays</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n  </List>\r\n  </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default EmployerList;","import React, { Component } from 'react'\r\nimport { Accordion,Icon } from 'semantic-ui-react';\r\nimport FilterBySkill from './FilterBySkill';\r\nimport FilterByCompanies from './FilterByCompanies';\r\nimport EmployerList from '../EmployerList/EmployerList'\r\nclass AccordionRightFilter extends Component {\r\n    state = { activeIndex: 0 }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    const { activeIndex } = this.state\r\n    const newIndex = activeIndex === index ? -1 : index\r\n\r\n    this.setState({ activeIndex: newIndex })\r\n  }\r\n    render() {\r\n        const { activeIndex } = this.state\r\n        return (\r\n/*             <Accordion>\r\n            <Accordion.Title style={{fontSize:'18px'}}\r\n              active={activeIndex === 0}\r\n              index={0}\r\n              onClick={this.handleClick}\r\n            >\r\n              <Icon name='dropdown' />\r\n             Companies\r\n            </Accordion.Title>\r\n            <Accordion.Content active={activeIndex === 0}>\r\n             <FilterByCompanies />\r\n            </Accordion.Content>\r\n            </Accordion> */\r\n          \r\n        <EmployerList />\r\n        )\r\n\r\n        \r\n    }\r\n}\r\nexport default AccordionRightFilter;","import _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Form } from 'semantic-ui-react'\r\nimport source from '../../data/skills.json';\r\nimport { connect } from 'react-redux';\r\nimport { setSkill } from './HomeActions';\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nconst mapDispatchToProps ={\r\n  setSkill\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  jobs:state.jobs\r\n})\r\nclass SearchSkills extends Component {\r\n  state = initialState\r\n\r\n  componentDidMount = () =>{\r\n    this.setState({\r\n      value:this.props.jobs.skill\r\n    })\r\n  }\r\n  handleResultSelect = (e, { result }) => {\r\n    this.setState({ value: result.title })\r\n    this.props.setSkill(result.title);\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n    this.props.setSkill(value);\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 10)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Form>\r\n        <Form.Group widths='equal'>\r\n          <Search placeholder='Skill you are looking for?'\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            {...this.props}\r\n          />\r\n          </Form.Group>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchSkills);","import _ from 'lodash'\r\nimport React, { Component,Fragment } from 'react'\r\nimport { Search, Grid,Form,Header } from 'semantic-ui-react'\r\nimport source from '../../data/cities.json';\r\nimport { connect } from 'react-redux';\r\nimport { setCity } from '../Home/HomeActions';\r\nconst initialState = { isLoading: false, results: [], value: '',city:'',skills:[]}\r\n\r\nconst mapStateToProps =(state)=>({\r\n  jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  setCity\r\n}\r\nclass SearchCities extends Component {\r\n  state = initialState\r\n\r\n  componentDidMount = () =>{\r\n    this.setState({\r\n      value:this.props.jobs.city\r\n    })\r\n    console.log(this.props.jobs.city);\r\n  }\r\n  handleResultSelect = (e, { result }) => {\r\n    this.setState({ value: result.title })\r\n    this.props.setCity(result.title);\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n    this.props.setCity(value);\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 10)\r\n  }\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    return (\r\n      <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Form>\r\n          <Form.Group widths='equal'>\r\n          <Search placeholder={'Enter city'}\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            {...this.props}\r\n            defaultValue={this.props.jobs.city}\r\n          />\r\n          </Form.Group>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchCities);","import React, { Component,Fragment } from 'react'\r\nimport { Grid,Button,Dimmer,Loader,Icon } from 'semantic-ui-react';\r\nimport JobList from '../JobList/JobList';\r\nimport AccordionLeftFilter from '../../Filters/AccordionLeftFilter';\r\nimport AccordionRightFilter from '../../Filters/AccordionRightFilter';\r\nimport SearchSkills from '../../Home/SearchSkills';\r\nimport SearchCities from '../../Home/SearchCities';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getJobs,clearFilters, getRecentJobs } from '../../Home/HomeActions';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    getJobs,\r\n    clearFilters,\r\n    getRecentJobs\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    state={\r\n        display:'none'\r\n    }\r\n    searchJobs =()=>{\r\n        this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.jobs.company,this.props.jobs.exp,this.props.jobs.salary);\r\n        this.setState({\r\n            display:'block'\r\n        })\r\n    }\r\n    clearFilters = () =>{\r\n        this.props.clearFilters();\r\n        this.props.getRecentJobs()\r\n    }\r\n    render() {\r\n        const { loading } =this.props.jobs;\r\n        return (\r\n            <Fragment>\r\n                {loading===true ? <Dimmer active>\r\n                    <Loader />\r\n                </Dimmer>:''}\r\n            <Grid>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={5}><SearchSkills/></Grid.Column>\r\n                    <Grid.Column width={5}><SearchCities /></Grid.Column>\r\n                    <Grid.Column width={2}><Button content='Search' primary rounded as={Link} to='/dashboard' onClick={this.searchJobs}/></Grid.Column>\r\n                    <Grid.Column width={3}><Button primary rounded onClick={this.clearFilters}>Clear Filters <Icon name='trash'/></Button></Grid.Column>\r\n                    </Grid>\r\n            <hr color='#D0CCCB'/><br/>\r\n            <Grid>\r\n                <Grid.Column width={3}><AccordionLeftFilter /></Grid.Column>\r\n                <Grid.Column width={10}><JobList /></Grid.Column>\r\n                <Grid.Column width={3}><AccordionRightFilter /></Grid.Column>\r\n                </Grid>\r\n                </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard)","import React, { Component,Fragment } from 'react'\r\nimport { Grid,Button,Header } from 'semantic-ui-react';\r\nimport SearchCities from './SearchCities';\r\nimport SearchSkills from './SearchSkills';\r\nimport { getJobs,getRecentJobs } from './HomeActions';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    getJobs,\r\n    getRecentJobs\r\n}\r\nclass HomeForSearchers extends Component {\r\nstate={\r\n    skillError:'',\r\n    cityError:''\r\n}\r\n    searchJobs =()=>{\r\n        const { skill } = this.props.jobs;\r\n        const { city } = this.props.jobs;\r\n        if(skill && skill!==undefined){\r\n            if(city){\r\n                this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.jobs.company,this.props.jobs.exp,this.props.jobs.salary);\r\n                this.props.history.push('/dashboard')\r\n            }else{\r\n                this.setState({\r\n                    cityError:'This Field City is mandatory'\r\n                })\r\n            }\r\n\r\n        }else{\r\n            this.setState({\r\n                skillError:'This Field Skill is mandatory'\r\n            })\r\n        }\r\n    }\r\n    getMostRecentJobs =()=>{\r\n        this.props.getRecentJobs();\r\n        this.props.history.push('/dashboard')\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Grid>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={5}><SearchSkills/></Grid.Column>\r\n                    <Grid.Column width={5}><SearchCities /></Grid.Column>\r\n                    <Grid.Column width={2}><Button content='Search' primary rounded  onClick={this.searchJobs} /></Grid.Column>\r\n                    </Grid>\r\n                    <br/>\r\n                <Grid style={{marginTop:'-4%'}}>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={5}><Header as='h6' color='red'>{this.state.skillError}</Header></Grid.Column>\r\n                    <Grid.Column width={5}> <Header as='h6' color='red'>{this.state.cityError}</Header></Grid.Column>\r\n                    </Grid>\r\n                    <br/>\r\n                <Grid>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={10}> Have look at <a onClick={this.getMostRecentJobs}> Recently added jobs</a></Grid.Column>\r\n                    </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(HomeForSearchers))","import React, { Component,Fragment } from 'react'\r\nimport { Grid,Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomeForPosters extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            <Grid>\r\n                <Grid.Column width={1}></Grid.Column>\r\n                <Grid.Column width={9}>If you have job openings in your organization,you can post current job here and take benefit of your organizations's referral programme.</Grid.Column>\r\n                <Grid.Column width={3}><Button content='Post New Job' primary rounded as={Link} to='/create' /></Grid.Column>\r\n                </Grid>\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default HomeForPosters;","import React, { Component } from 'react'\r\nimport HomeForSearchers from './HomeForSearchers';\r\nimport HomeForPosters from './HomeForPosters';\r\nimport {Grid,Header,Responsive } from 'semantic-ui-react';\r\nimport EmployerListHome from '../EmployerList/EmployerListHome';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/><br/>\r\n               \r\n                <Grid>\r\n                    <Grid.Column  mobile={3} tablet={3} computer={3}><h1 style={{color:'#00b5ad'}}>ReferralJobz</h1></Grid.Column>\r\n                    <Grid.Column  mobile={13} tablet={13} computer={13}><h5>First job referal platform, where people can post current openings in their organization and help others to land good job,and get benefit of the referal programe</h5></Grid.Column>\r\n                    </Grid>\r\n                   \r\n                <Header color='teal' content='For Job Seekers' />\r\n                <HomeForSearchers />\r\n                <br/><br/><br/>\r\n                <Header color='teal' content='For Job Posters' />\r\n                <HomeForPosters />\r\n               {/*  <br/><br/><br/>\r\n                <EmployerListHome /> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { List, Image,Header } from 'semantic-ui-react';\r\n\r\nexport default class EmployerListHome extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header as='h5' color='teal'>Top Employers</Header>\r\n                <List horizontal>\r\n                <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/wipro.com' />\r\n        <List.Content>\r\n            <List.Header>Wipro</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/tcs.com' />\r\n        <List.Content>\r\n            <List.Header>TCS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/amazon.com' />\r\n        <List.Content>\r\n            <List.Header>Amazon</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/persistent.com' />\r\n        <List.Content>\r\n            <List.Header>Persistent</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/ibm.com' />\r\n        <List.Content>\r\n            <List.Header>IBM</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/capgemini.com' />\r\n        <List.Content>\r\n            <List.Header>Capgemini</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/citibank.com' />\r\n        <List.Content>\r\n            <List.Header>Citi Bank</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/ubs.com' />\r\n        <List.Content>\r\n            <List.Header>UBS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/hcl.com' />\r\n        <List.Content>\r\n            <List.Header>HCL</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/atos.net' />\r\n        <List.Content>\r\n            <List.Header>Atos</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/xoriant.com' />\r\n        <List.Content>\r\n            <List.Header>Xoriant</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/barclays.com' />\r\n        <List.Content>\r\n            <List.Header>Barclays</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"," const cities = [\r\n    {\r\n      key: 'Pune',\r\n      text: 'Pune',\r\n      value: 'Pune',\r\n    },\r\n    {\r\n      key: 'Mumbai',\r\n      text: 'Mumbai',\r\n      value: 'Mumbai',\r\n    },\r\n    {\r\n      key: 'Nashik',\r\n      text: 'Nashik',\r\n      value: 'Nashik',\r\n    },\r\n    {\r\n      key: 'Banglore',\r\n      text: 'Banglore',\r\n      value: 'Banglore',\r\n    },\r\n    {\r\n      key: 'Delhi',\r\n      text: 'Delhi',\r\n      value: 'Delhi',\r\n    },\r\n    {\r\n      key: 'Hydrabad',\r\n      text: 'Hydrabad',\r\n      value: 'Hydrabad',\r\n    },\r\n  ]\r\n  export default cities;","import React, { Component } from 'react';\r\nimport _ from 'lodash'\r\nimport { Form, Grid, Dropdown, TextArea, Header, Button, Input, Search, Icon, Modal, Container } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport source from '../../../data/companies.json';\r\nimport cities from '../../../data/dropdownCities';\r\nimport { addJob,dismissJobCreatedSuccessModal } from '../../Home/HomeActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs:state.jobs,\r\n  auth:state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  addJob,\r\n  dismissJobCreatedSuccessModal\r\n}\r\nconst initialState = { isLoading: false, results: [], company: '', jobPost: {} }\r\nclass CreateJobForm extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    results: [],\r\n    value: '',\r\n    jobPost: {},\r\n\r\n    jobTitle: '',\r\n    company: '',\r\n    city: '',\r\n    address: '',\r\n    jobDescription: '',\r\n    skills: [],\r\n    experienceFrom: '',\r\n    experienceTo: '',\r\n    salaryFrom: '',\r\n    salaryTo: '',\r\n    posterName: '',\r\n    posterEmail: '',\r\n    isError: false,\r\n\r\n    launchSuccessModal: false\r\n\r\n  };\r\n\r\n  handleResultSelect = (e, { result }) => {\r\n    this.setState(\r\n      {\r\n        value: result.title,\r\n        company: result.title\r\n      })\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value, company: value })\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 10)\r\n  }\r\n\r\n  handleOnCityChange = (e, data) => {\r\n    this.setState({\r\n      city: data.value\r\n    })\r\n  }\r\n\r\n  handleOnExpFromChange = (e, data) => {\r\n    this.setState({\r\n      experienceFrom: data.value\r\n    })\r\n  }\r\n\r\n  handleOnExpToChange = (e, data) => {\r\n    this.setState({\r\n      experienceTo: data.value\r\n    })\r\n  }\r\n\r\n  handleOnSalaryFromChange = (e, data) => {\r\n    this.setState({\r\n      salaryFrom: data.value\r\n    })\r\n  }\r\n\r\n  handleOnSalaryToChange = (e, data) => {\r\n    this.setState({\r\n      salaryTo: data.value\r\n    })\r\n  }\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      posterName: e.target.value\r\n    })\r\n  }\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      posterEmail: e.target.value\r\n    })\r\n  }\r\n  handleJobTitleChange = (e) => {\r\n    this.setState({\r\n      jobTitle: e.target.value\r\n    })\r\n  }\r\n\r\n  handleJobDescChange = (e) => {\r\n    this.setState({\r\n      jobDescription: e.target.value\r\n    })\r\n  }\r\n  handleSkillsChange = (e) => {\r\n    this.setState({\r\n      skills: e.target.value.split(\",\")\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const { jobTitle, company, city, address, jobDescription, skills, experienceFrom, experienceTo, salaryFrom, salaryTo, posterName, posterEmail } = this.state;\r\n    const jobPost = {\r\n      jobTitle, company, city, address, jobDescription, skills, experienceFrom, experienceTo, salaryFrom, salaryTo, posterName, posterEmail\r\n    }\r\n    if (this.validateInput()) {\r\n      this.props.addJob(jobPost);\r\n    } else {\r\n      this.setState({\r\n        isError: true\r\n      })\r\n    }\r\n\r\n  }\r\n  validateInput = () => {\r\n    const { jobTitle, company, city, address, jobDescription, skills, experienceFrom, experienceTo, salaryFrom, salaryTo, posterName, posterEmail } = this.state;\r\n    if (jobTitle && company && city && jobDescription && skills && experienceFrom && experienceTo && salaryFrom && salaryTo && posterName && posterEmail) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  closeModal = ()=>{\r\n    this.props.dismissJobCreatedSuccessModal();\r\n  }\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    const{ jobCreatedSucessModal } = this.props.jobs;\r\n    const{ autheticated } =this.props.auth;\r\n    if(!autheticated){\r\n      this.props.history.push('/login');\r\n    }\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Form className='createJobform'>\r\n            <Header color='teal' content='Job Details' />\r\n            {this.state.isError && <Header color='red' content='All Fields are mandatory' />}\r\n            <Form.Group>\r\n              <Input\r\n                style={{ width: '100%' }}\r\n                placeholder='Job Title e.g. Senior Java Developer'\r\n                onChange={this.handleJobTitleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <TextArea\r\n                placeholder='Job Description e.g Roles and responsibilities'\r\n                onChange={this.handleJobDescChange}\r\n                rows={10}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <TextArea\r\n                style={{ width: '100%' }}\r\n                placeholder='Add comma seprated Skills e.g Java,AngularJs,Aws'\r\n                onChange={this.handleSkillsChange}\r\n                rows={5}\r\n              />\r\n\r\n            </Form.Group>\r\n          \r\n              <Grid>\r\n                <Grid.Column width={8}>\r\n                  <Search placeholder={'Enter Company'}\r\n                     loading={isLoading}\r\n                     fluid\r\n                     onResultSelect={this.handleResultSelect}\r\n                     onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                       leading: true,\r\n                     })}\r\n                     results={results}\r\n                     value={value}\r\n                     {...this.props}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                  <Dropdown\r\n                    placeholder='Enter City'\r\n                    fluid\r\n                    selection\r\n                    options={cities}\r\n                    onChange={this.handleOnCityChange}\r\n                  />\r\n                </Grid.Column>\r\n              </Grid>\r\n            \r\n            \r\n              <Grid>\r\n                <Grid.Column width={8}>\r\n                  <Input\r\n                    type='numbers'\r\n                    placeholder='Experience From in years'\r\n                    onChange={this.handleOnExpFromChange}\r\n                    fluid\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                  <Input\r\n                    placeholder='Experience To in years'\r\n                    onChange={this.handleOnExpToChange}\r\n                    fluid\r\n                  />\r\n                </Grid.Column>\r\n              </Grid>\r\n           \r\n           <Grid>\r\n             <Grid.Column width={8}>\r\n              <Input\r\n                placeholder='Salary From in lakhs'\r\n                onChange={this.handleOnSalaryFromChange}\r\n                fluid\r\n              />\r\n              </Grid.Column>\r\n              <Grid.Column width={8}>\r\n              <Input\r\n                placeholder='Salary To in lakhs'\r\n                onChange={this.handleOnSalaryToChange}\r\n                fluid\r\n              />\r\n              </Grid.Column>\r\n              </Grid>\r\n           \r\n            <Header color='teal' content='Job Poster Details' />\r\n            <Form.Group widths='equal'>\r\n              <Form.Input\r\n                fluid\r\n                id='form-subcomponent-shorthand-input-first-name'\r\n                label='Name'\r\n                placeholder='Name'\r\n                onChange={this.handleNameChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                id='form-subcomponent-shorthand-input-last-name'\r\n                label='Applications will be sent to this email address'\r\n                placeholder='Email'\r\n                onChange={this.handleEmailChange}\r\n              />\r\n            </Form.Group>\r\n            <Button primary style={{ marginLeft: '30%' }} onClick={this.handleSubmit}>Submit Job</Button>\r\n            <Button as={Link} to='/'>Cancel</Button>\r\n          </Form>\r\n        </Grid.Column>\r\n\r\n\r\n        <Modal\r\n          open={jobCreatedSucessModal}\r\n          size=\"small\">\r\n          <Modal.Content>\r\n            <p>\r\n              You have succesfully created new job.\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button primary onClick={this.closeModal}>\r\n              <Icon name='close' /> Close\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateJobForm);","import React, { Component } from 'react'\r\nimport { Grid,Message,Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    auth:state.auth\r\n})\r\nclass Profile extends Component {\r\n    render() {\r\n        const{ autheticated } =this.props.auth;\r\n        if(!autheticated){\r\n          this.props.history.push('/');\r\n        }\r\n        return (\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                <Message>\r\n                    <Message.Header>Profile<Button content='Update' floated='right'/></Message.Header>\r\n                    <Message.List>\r\n                    <Message.Item>Jhon Doe</Message.Item>\r\n                    <Message.Item>hondoe@gmail.com</Message.Item>\r\n                    <Message.Item>+91 8975972716</Message.Item>\r\n                    </Message.List>\r\n                </Message>\r\n\r\n                </Grid.Column>\r\n                </Grid>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{})(Profile);","import React, { Component, Fragment } from 'react'\r\nimport { Table, Header, Button, GridColumn } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getJobsByEmail } from './UserActions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs: state.user.jobs,\r\n  user: state.auth.user,\r\n  auth: state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  getJobsByEmail\r\n}\r\nclass MyJobs extends Component {\r\n\r\n  fomatdate = (date) => {\r\n    var monthNames = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n\r\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n  }\r\n  componentDidMount() {\r\n    this.props.getJobsByEmail(this.props.user.email);\r\n  }\r\n  handleViewDetails = (id) => {\r\n    this.props.history.push('/user/myjobs/' + id);\r\n  }\r\n  render() {\r\n    const { autheticated } = this.props.auth;\r\n    if (!autheticated) {\r\n      this.props.history.push('/');\r\n    }\r\n    const { jobs } = this.props;\r\n    return (\r\n      <Fragment>\r\n       {jobs.length>0?<Table celled>\r\n          <Table.Header>\r\n            <Table.Row >\r\n              <Table.HeaderCell>Sr.No</Table.HeaderCell>\r\n              <Table.HeaderCell>Job Title</Table.HeaderCell>\r\n              <Table.HeaderCell>Company</Table.HeaderCell>\r\n              <Table.HeaderCell>Created at</Table.HeaderCell>\r\n              <Table.HeaderCell>Actions</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {jobs.map((job, index) => (\r\n              <Table.Row warning>\r\n                <Table.Cell>{index + 1}</Table.Cell>\r\n                <Table.Cell>{job.jobTitle}</Table.Cell>\r\n                <Table.Cell> {job.company}</Table.Cell>\r\n                <Table.Cell>{this.fomatdate(new Date(job.postedOn))}</Table.Cell>\r\n                <Table.Cell> <GridColumn><Button color='teal' onClick={() => this.handleViewDetails(job.id)}>View Details</Button></GridColumn></Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n\r\n          </Table.Body>\r\n        </Table>\r\n        :<Fragment><br/><Header as='h3' color='heal'>You have not created any jobs as of now.</Header></Fragment>\r\n        }\r\n        <Button as={Link} to='/user/createnewjob' content='Add New Job' primary floated='right' />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobs);\r\n","import { GET_JOBS_BY_EMAIL,DISABLE_LOADING, LOADING} from './UserConstants';\r\nimport axios from \"axios\";\r\nimport {API_BASE_URL} from '../../util/Constants';\r\n\r\nexport const getJobsByEmail = (email) => dispatch=>{\r\n    axios({\r\n        method: 'GET',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost/byEmail?email='+email,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:GET_JOBS_BY_EMAIL,\r\n        payload:response.data\r\n    })).catch(err => dispatch({\r\n        type:DISABLE_LOADING\r\n    }))\r\n}\r\nexport const setLoading = () => dispatch=>{\r\n    dispatch({\r\n        type:LOADING,\r\n    })\r\n}","export const GET_JOBS_BY_EMAIL='GET_JOBS_EMAIL';\r\nexport const LOADING='LOADING';\r\nexport const DISABLE_LOADING='DISABLE_LOADING';","import React, { Component } from 'react';\r\nimport { Segment, Item, Grid, Icon, Header,Label,Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    const jobPostId = ownProps.match.params.id;\r\n    let jobPost ={};\r\n    if(jobPostId && state.user.jobs.length>0){\r\n        jobPost = state.user.jobs.filter(job=>job.id === jobPostId)[0];\r\n      }\r\n      return {\r\n        jobPost\r\n      }\r\n}\r\nclass JobDetails extends Component {\r\n    fomatdate = (date) => {\r\n        var monthNames = [\r\n          \"January\", \"February\", \"March\",\r\n          \"April\", \"May\", \"June\", \"July\",\r\n          \"August\", \"September\", \"October\",\r\n          \"November\", \"December\"\r\n        ];\r\n    \r\n        var day = date.getDate();\r\n        var monthIndex = date.getMonth();\r\n        var year = date.getFullYear();\r\n    \r\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n      }\r\n    render() {\r\n        const{jobPost} =this.props;\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <Header color='teal'>Job Details for:{jobPost.id}</Header>\r\n              \r\n                <Segment.Group>\r\n                    <Segment id={jobPost.id}>\r\n                        <Item.Group>\r\n                            <Item>\r\n                                <Item.Content>\r\n                                    <Grid>\r\n                                        <Grid.Column width={13}>\r\n                                            <Item.Header style={{ fontSize: '20px' }}><pre style={{ whiteSpace: 'pre-line' }}>Job Title:{jobPost.jobTitle}</pre></Item.Header>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={1} style={{ float: 'right' }}>\r\n\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n\r\n                                    <Item.Description>\r\n                                        <span style={{ fontSize: '15px' }}><pre><b>Company:</b>{jobPost.company}</pre></span>\r\n                                        <span style={{ fontSize: '15px' }}><pre><b>City:</b>{jobPost.city}</pre></span>\r\n                                    </Item.Description>\r\n                                </Item.Content>\r\n                            </Item>\r\n                        </Item.Group>\r\n                    </Segment>\r\n\r\n                    <Segment >\r\n                        <span style={{ fontSize: '15px' }}><pre style={{ whiteSpace: 'pre-line' }}><b>Skills:</b>{jobPost.skills.toString()}</pre></span>\r\n                    </Segment>\r\n                    <Segment >\r\n                        <span style={{ fontSize: '15px' }}><b>Job Description:</b><pre style={{ whiteSpace: 'pre-line' }}>{jobPost.jobDescription}</pre></span>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <span>\r\n                           <b>Experience Required(years):</b><br/>\r\n                           Experience From: {jobPost.experienceFrom}-\r\n                           Experience To:{jobPost.experienceTo}<br/>\r\n                           <b>Salary Offered(lakhs):</b> <br/>\r\n                           Salary From:{jobPost.salaryFrom || 'NA'}-\r\n                           Salary To:{jobPost.salaryTo}\r\n                        </span>\r\n                    </Segment>   \r\n                    <Segment>\r\n                    <span style={{ fontSize: '15px' }}><pre style={{ whiteSpace: 'pre-line' }}><b>Posted On:</b>{this.fomatdate(new Date(jobPost.postedOn))}</pre></span>\r\n                        </Segment>      \r\n                </Segment.Group>\r\n                <Button floated='right' color='teal' as={Link} to='/user/myjobs'><Icon name='backward'></Icon>Go To My Jobs</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{})(JobDetails);","import React, { Component } from 'react'\r\nimport { Grid } from 'semantic-ui-react';\r\nimport {Route} from 'react-router-dom';\r\nimport Profile from './Profile';\r\nimport MyJobs from './MyJobs';\r\nimport CreateJobForm from '../Jobs/CreateJob/CreateJobForm';\r\nimport JobDetails from './Jobs/JobDetails';\r\n\r\nexport default class UserDashboard extends Component {\r\n    render() {\r\n        return (\r\n            <Grid>\r\n            <Grid.Column width={16}>\r\n                <Route path=\"/user/profile\" component={Profile} />\r\n                <Route exact path=\"/user/myjobs\" component={MyJobs} />\r\n                <Route exact path=\"/user/myjobs/:id\" component={JobDetails} />\r\n                <Route path=\"/user/createnewjob\" component={CreateJobForm} />\r\n            </Grid.Column>   \r\n            \r\n        </Grid>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { incrementCounter,decrementCounter} from './TestActions';\r\nconst mapStateToProps =(state)=>({\r\n    localData:state.test.data,\r\n    loading:state.test.loading\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    incrementCounter,\r\n    decrementCounter\r\n}\r\n\r\n class TestComponent extends Component {\r\n    handleIncrementCounter = ()=>{\r\n        this.props.incrementCounter(2);\r\n    }\r\n    handleDecrementCounter = () =>{\r\n        this.props.decrementCounter(1);\r\n    }\r\n    render() {\r\n        //destructing props object\r\n        const {localData} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Test Component</h1>\r\n                <h3>{localData}</h3>\r\n                <Button onClick={this.handleIncrementCounter} positive content='+'></Button>\r\n                <Button onClick={this.handleDecrementCounter} negative content='-'></Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TestComponent);","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./TestConstants\"\r\n\r\nexport const incrementCounterAsync =(counter)=>{\r\n    return{\r\n        type:INCREMENT_COUNTER,\r\n        payload:counter\r\n        \r\n    }\r\n}\r\n\r\nexport const incrementCounter =(counter)=>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{\r\n            dispatch(incrementCounterAsync(counter));\r\n        },1000)\r\n    }\r\n}\r\n\r\nexport const decrementCounter =(counter)=>{\r\n    return{\r\n        type:DECREMENT_COUNTER,\r\n        payload:counter\r\n    }\r\n}","export const INCREMENT_COUNTER ='INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';","import React,{Fragment} from 'react';\r\nimport './App.css';\r\nimport Navbar from './features/navbar/Navbar';\r\nimport AuthHome from './features/Login/AuthHome';\r\nimport { Route } from 'react-router-dom';\r\nimport Dashboard from './features/Jobs/JobsDashboard/Dashboard';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Home from './features/Home/Home';\r\nimport CreateJobForm from './features/Jobs/CreateJob/CreateJobForm';\r\nimport RegisterForm from './features/Login/RegisterForm';\r\nimport UserDashboard from './features/User/UserDashboard';\r\nimport TestComponent from './Test/TestComponent';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div>\r\n      <Navbar/><br/><br/>\r\n      <Container className=\"main\">\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Route exact path=\"/dashboard\" component={Dashboard}/>\r\n        <Route exact path=\"/login\" component={AuthHome}/>\r\n        <Route exact path=\"/register\" component={RegisterForm}/>\r\n        <Route exact path=\"/create\" component={CreateJobForm}/>\r\n        <Route path=\"/user\" component={UserDashboard}/>\r\n        <Route path=\"/test\" component={TestComponent}/>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./TestConstants\";\r\n\r\nconst initialState = {\r\n    data : 42,\r\n    loading :false\r\n}\r\n\r\nconst TestRedcuer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case INCREMENT_COUNTER:\r\n            return{...state,data:state.data+action.payload}\r\n        case DECREMENT_COUNTER:\r\n                return{...state,data:state.data-action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default TestRedcuer;","import { \r\n    GET_JOBS,ITEMS_LOADING, SET_CITY,SET_COMPANY,\r\n     SET_SKILL,ADD_JOB,DESABLE_LOADING,\r\n     LAUNCH_JOB_APPLIED_SUCCESS_MODAL, \r\n     DISMISS_JOB_APPLIED_SUCCESS_MODAL,\r\n     LAUNCH_JOB_CREATED_SUCCESS_MODAL,\r\n     DISMISS_JOB_CREATED_SUCCESS_MODAL,\r\n    SET_SAL,CLEAR_FILTERS,\r\n    SET_EXP,GET_RECENT_JOBS} from \"./HomeConstants\"\r\n\r\nconst initialState={\r\n    jobs:[],\r\n    loading:false,\r\n    skill:'',\r\n    city:'',\r\n    company:'',\r\n    exp:'',\r\n    salary:'',\r\n    jobAppliedSucessModal:false,\r\n    jobCreatedSucessModal:false\r\n}\r\n\r\nexport const HomeReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n            case GET_JOBS:\r\n            return{\r\n                ...state,\r\n                jobs:action.payload,\r\n                loading:false\r\n            }\r\n            case ITEMS_LOADING:\r\n                return{\r\n                    ...state,\r\n                    loading:true\r\n                }\r\n            case DESABLE_LOADING:\r\n                return{\r\n                    ...state,\r\n                    loading:false\r\n                }\r\n            case SET_CITY:\r\n                return{\r\n                    ...state,\r\n                    city:action.payload\r\n                }\r\n            case SET_COMPANY:{\r\n                    return{\r\n                        ...state,\r\n                        company:action.payload\r\n                    }\r\n                }\r\n            case SET_SAL:{\r\n                    return{\r\n                        ...state,\r\n                        salary:action.payload\r\n                    }\r\n                }\r\n            case SET_EXP:{\r\n                return{\r\n                    ...state,\r\n                    exp:action.payload\r\n                }\r\n            } \r\n            case SET_SKILL:{\r\n                return{\r\n                    ...state,\r\n                    skill:action.payload\r\n                }\r\n            }\r\n            case ADD_JOB:{\r\n                return{\r\n                    ...state\r\n                }\r\n            }\r\n            case LAUNCH_JOB_APPLIED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    jobAppliedSucessModal:true\r\n                }\r\n            }\r\n            case DISMISS_JOB_APPLIED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    jobAppliedSucessModal:false\r\n                }\r\n            }\r\n            case LAUNCH_JOB_CREATED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    jobCreatedSucessModal:true\r\n                    \r\n                }\r\n            }\r\n            case DISMISS_JOB_CREATED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    jobCreatedSucessModal:false\r\n                }\r\n            }\r\n            case CLEAR_FILTERS:{\r\n                return{\r\n                    ...state,\r\n                    company:'',\r\n                    exp:'',\r\n                    salary:'',\r\n                }\r\n            }\r\n            case GET_RECENT_JOBS:{\r\n            return{\r\n                ...state,\r\n                jobs:action.payload,\r\n                loading:false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {LODING,DISABLE_LOADING, DO_LOGIN, DO_LOGOUT, DO_REGISTER,ADD_ERROR } from './LoginConstants';\r\n\r\nconst initialState={\r\n    loading:false,\r\n    user:{},\r\n    autheticated:false,\r\n    error:'',\r\n    registrationSuceessMessage:''\r\n}\r\n\r\nexport const AuthReducer = (state=initialState,action)=>{\r\n\r\n    switch(action.type){\r\n        case LODING:{\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        }\r\n        case DISABLE_LOADING:{\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        }\r\n        case DO_LOGIN:{\r\n            console.log('payload:'+JSON.stringify(action.payload));\r\n            if(action.payload.id){\r\n                return {\r\n                    ...state,\r\n                    user:action.payload,\r\n                    loading:false,\r\n                    autheticated:true,\r\n                    error:''\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    user:action.payload,\r\n                    loading:false,\r\n                    autheticated:false\r\n                }\r\n            }\r\n           \r\n        }\r\n        case DO_LOGOUT:{\r\n            return{\r\n                ...state,\r\n                user:action.payload,\r\n                loading:false,\r\n                autheticated:false,\r\n                error:''\r\n            }\r\n        }\r\n        case DO_REGISTER:{\r\n            return{\r\n                ...state,\r\n                user:action.payload,\r\n                loading:false,\r\n                error:'',\r\n                registrationSuceessMessage:'Registration successful and proceed with login'\r\n            }\r\n        }\r\n        case ADD_ERROR:{\r\n            return{\r\n                ...state,\r\n                error:action.payload,\r\n                loading:false\r\n            }\r\n        }\r\n        default:\r\n                return state;\r\n    }\r\n}","import { GET_JOBS_BY_EMAIL } from \"./UserConstants\"\r\n\r\nconst initialState={\r\n    jobs:[]\r\n}\r\nexport const UserReducer =(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case GET_JOBS_BY_EMAIL:{\r\n            return{\r\n                ...state,\r\n                jobs:action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport TestRedcuer from \"../Test/TestReducer\";\r\nimport { HomeReducer } from \"../features/Home/HomeReducer\";\r\nimport { AuthReducer } from \"../features/Login/AuthReducer\";\r\nimport { UserReducer } from \"../features/User/UserReducer\";\r\n\r\nexport const RootReducer = combineReducers({\r\n    test:TestRedcuer,\r\n    jobs:HomeReducer,\r\n    auth:AuthReducer,\r\n    user:UserReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './store/ConfigureStore';\r\n\r\nconst rootElement = document.getElementById('root');\r\nconst store = ConfigureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter> \r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>, \r\nrootElement);\r\n\r\n","import { createStore,applyMiddleware ,compose } from \"redux\"\r\nimport { RootReducer } from \"../reducers/RootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const ConfigureStore  = () =>{\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(RootReducer,composeEnhancers(applyMiddleware(thunk)));\r\n    return store;\r\n}"],"sourceRoot":""}