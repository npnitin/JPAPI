{"version":3,"sources":["util/Constants.js","features/Login/LoginActions.js","features/Login/LoginConstants.js","features/Login/SignInMenu.js","features/navbar/Navbar.js","features/Login/RegisterForm.js","features/Login/LoginForm.js","features/Login/AuthHome.js","features/Home/HomeActions.js","features/Home/HomeConstants.js","features/Jobs/JobList/Job.js","features/Jobs/JobList/JobList.js","features/Filters/FilterByCompanies.js","features/Filters/FilterBySalary.js","features/Filters/FilterByExperience.js","features/Filters/AccordionLeftFilter.js","features/Filters/FilterBySkill.js","features/EmployerList/EmployerList.js","features/Filters/AccordionRightFilter.js","features/Home/SearchSkills.js","features/Home/SearchCities.js","features/Jobs/JobsDashboard/Dashboard.js","features/Home/HomeForSearchers.js","features/Home/HomeForPosters.js","features/EmployerList/EmployerListHome.js","features/Home/RecentJobs.js","features/Home/Cards.js","features/Home/Home.js","data/dropdownCities.js","features/Jobs/CreateJob/CreateJobForm.js","features/User/UserActions.js","features/User/UserConstants.js","features/User/Profile.js","features/User/MyJobs.js","features/User/Jobs/JobDetails.js","features/User/AddNewInterviewQuestions.js","features/User/MyInterviewQuestions.js","features/User/UpdateUser.js","features/User/UserDashboard.js","Test/TestComponent.js","Test/TestActions.js","Test/TestConstants.js","features/Home/Jobdetails.js","App.js","Test/TestReducer.js","features/Home/HomeReducer.js","features/Login/AuthReducer.js","features/User/UserReducer.js","reducers/RootReducer.js","index.js","store/ConfigureStore.js"],"names":["API_BASE_URL","setItemsLoading","type","doLogout","mapDispatchToProps","SignInMenu","handleSignOut","props","history","push","user","this","Menu","Item","position","Image","avatar","spaced","src","profilePhotoUrl","Dropdown","pointing","text","name","as","Link","to","icon","onClick","Component","withRouter","connect","state","Navbar","autheticated","auth","inverted","fixed","Container","header","alt","Button","basic","doRegister","dispatch","axios","method","url","data","config","headers","then","response","payload","catch","err","errorMessage","addError","error","RegisterForm","email","password","password1","handleOnChange","e","setState","target","value","handleSubmit","message","Grid","textAlign","style","height","Column","maxWidth","Header","registrationSuceessMessage","color","Form","className","Input","fluid","iconPosition","placeholder","onChange","primary","size","doLogin","LoginForm","console","log","AuthHome","loading","Dimmer","active","Loader","columns","width","Divider","vertical","getJobs","skill","city","company","exp","salary","getRecentJobs","applyJob","jobId","userId","uploadResume","file","FormData","append","res","dismissJobAppliedSuceesModal","setJob","job","Job","id","fileName","files","fomatdate","date","day","getDate","monthIndex","getMonth","year","getFullYear","closeModal","disableApplyButton","bind","jobAppliedSucessModal","jobs","img","Segment","Group","circular","onError","onerror","Content","fontSize","whiteSpace","jobTitle","float","Description","skills","toString","jobDescription","Icon","experienceFrom","experienceTo","salaryFrom","salaryTo","posterName","Date","postedOn","floated","content","Modal","open","Actions","JobList","jobListing","map","key","setCompany","FilterByCompanies","handleChange","companiesList","companies","companyItr","Field","Checkbox","radio","label","checked","setSal","sal","FilterBySalary","salariesList","salaries","salaryItr","setExp","FilterByExperience","experienceList","experiences","experience","AccordionLeftFilter","activeIndexes","handleClick","titleProps","index","newIndex","currentIndexPosition","indexOf","splice","Accordion","Title","includes","EmployerList","List","selection","verticalAlign","AccordionRightFilter","activeIndex","initialState","isLoading","results","setSkill","SearchSkills","componentDidMount","handleResultSelect","result","title","handleSearchChange","setTimeout","length","re","RegExp","_","escapeRegExp","filter","source","test","widths","Search","onResultSelect","onSearchChange","debounce","leading","setCity","SearchCities","defaultValue","clearFilters","Dashboard","display","searchJobs","rounded","Message","warning","HomeForSearchers","skillError","cityError","undefined","getMostRecentJobs","marginTop","RecentJobs","viewJobDetails","divided","relaxed","mobile","tablet","computer","Home","border","cities","addJob","dismissJobCreatedSuccessModal","jobPost","CreateJobForm","address","posterEmail","isError","launchSuccessModal","handleOnCityChange","handleOnExpFromChange","handleOnExpToChange","handleOnSalaryFromChange","handleOnSalaryToChange","handleNameChange","handleEmailChange","handleJobTitleChange","handleJobDescChange","handleSkillsChange","split","validateInput","jobCreatedSucessModal","TextArea","rows","options","marginLeft","getJobsByEmail","Profile","Card","wrapped","ui","Meta","createdAt","extra","aria-hidden","class","href","resumeUrl","htmlFor","MyJobs","handleViewDetails","Table","celled","Row","HeaderCell","Body","Cell","GridColumn","JobDetails","ownProps","jobPostId","match","params","AddNewInterviewQuestions","event","hasOwnProperty","addQuestion","question","questions","removeQuestion","i","handleQuestionChange","time","dateTime","datesRange","location","designation","Fragment","animation","hidden","minHeight","MyInterviewQuestions","UpdateUser","UserDashboard","path","component","exact","incrementCounter","counter","incrementCounterAsync","decrementCounter","TestComponent","handleIncrementCounter","handleDecrementCounter","localData","positive","negative","getJobById","Jobdetails","App","TestRedcuer","action","RootReducer","combineReducers","JSON","stringify","rootElement","document","getElementById","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ConfigureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.b0bf7e88.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://npnitinjobportal.herokuapp.com'\r\n//export const API_BASE_URL = 'http://127.0.0.1:8080'","import {DO_LOGIN,DO_LOGOUT,DO_REGISTER,LODING, DISABLE_LOADING, ADD_ERROR} from './LoginConstants';\r\nimport {API_BASE_URL} from '../../util/Constants';\r\nimport axios from \"axios\";\r\n\r\nexport const doLogin = (user) => dispatch=>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/user/login',\r\n        data:user,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:DO_LOGIN,\r\n        payload:response.data\r\n    })).catch(err => dispatch({\r\n        type:ADD_ERROR,\r\n        payload:err.response.data.errorMessage\r\n    }))\r\n}\r\n\r\nexport const doRegister = (user) =>dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/user/register',\r\n        data:user,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:DO_REGISTER,\r\n        payload:response.data\r\n    })).catch(err => dispatch({\r\n        type:ADD_ERROR,\r\n        payload:err.response.data.errorMessage\r\n    }))\r\n}\r\n\r\nexport const getJobsbyEmail = (email) =>{\r\n    \r\n}\r\nexport const setItemsLoading = () =>{\r\n    return{\r\n        type:LODING\r\n    }\r\n}\r\n\r\nexport const doLogout = () =>{\r\n    return{\r\n        type:DO_LOGOUT\r\n    }\r\n}\r\nexport const addError = (error) =>{\r\n    return{\r\n        type:ADD_ERROR,\r\n        payload:error\r\n    }\r\n}","export const DO_LOGIN='DO_LOGIN';\r\nexport const DO_LOGOUT='DO_LOGOUT';\r\nexport const DO_REGISTER='DO_REGISTER';\r\nexport const LODING ='LOADING';\r\nexport const DISABLE_LOADING='DISABLE_LOADING';\r\nexport const GET_JOBS_BY_EMAIl='GET_JOBS_BY_EMAIl';\r\nexport const ADD_ERROR='ADD_ERROR';","import React, { Component } from 'react'\r\nimport { Menu,Image,Dropdown } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { doLogout} from '../Login/LoginActions';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nconst mapStateToProps =(state)=>({\r\n})\r\nconst mapDispatchToProps ={\r\n    doLogout,\r\n}\r\n class SignInMenu extends Component {\r\n    handleSignOut = () =>{\r\n        this.props.doLogout();\r\n        this.props.history.push('/');\r\n      }\r\n    render() {\r\n        const{user} = this.props;\r\n        return (\r\n            <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src={user.profilePhotoUrl} />\r\n            <Dropdown pointing=\"top left\" text={user.name}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item text=\"Create New Job\" as={Link} to='/user/createnewjob' icon=\"plus\" />\r\n                <Dropdown.Item text=\"My Jobs\" as={Link} to='/user/myjobs' icon=\"calendar\" />\r\n                <Dropdown.Item text=\"Add New Interview Questions\" as={Link} to='/user/createNewInterviewQuestions' icon=\"plus\" />\r\n                <Dropdown.Item text=\"My Interview Questions\" as={Link} to='/user/myInterviewQuestions' icon=\"calendar\" />\r\n                <Dropdown.Item text=\"My Profile\" as={Link} to='/user/profile' icon=\"user\" />\r\n                <Dropdown.Item text=\"Settings\" icon=\"settings\" />\r\n                <Dropdown.Item text=\"Sign Out\" onClick={this.handleSignOut} icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(SignInMenu));","import React, {Component} from 'react';\r\nimport { Menu,Container,Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport SignInMenu from '../Login/SignInMenu';\r\nimport { doLogout} from '../Login/LoginActions';\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  doLogout,\r\n}\r\nclass Navbar extends Component {\r\n  render() {\r\n    const{autheticated} = this.props.auth;\r\n    const{user} = this.props.auth;\r\n    return (\r\n        <div>\r\n             <Menu inverted fixed=\"top\">\r\n                    <Container>\r\n                      <Menu.Item header as={Link} to=\"/\" >ReferralJobz\r\n                        <img src=\"assets/logo.png\" alt=\"logo\" />\r\n                      </Menu.Item>\r\n                      <Menu.Item>Find Salaries</Menu.Item>\r\n                      <Menu.Item>Company Reviews</Menu.Item>\r\n                      <Menu.Item>Interview Questions</Menu.Item>\r\n                      <Menu.Item>Interview Questions</Menu.Item>\r\n                      <Menu.Item position=\"right\">\r\n                        <Button  basic inverted as={Link} to='/user/createnewjob'>Add Job</Button>\r\n                        {\r\n                        autheticated?\r\n                        <SignInMenu user={user}/>:\r\n                        <Button  basic inverted as={Link} to=\"/login\">Login/Register</Button>\r\n                        }\r\n                      </Menu.Item>\r\n\r\n                    </Container>\r\n                  </Menu>\r\n        </div>\r\n    );\r\n}\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar);\r\n","import React, { Component } from 'react'\r\nimport { Grid, Header, Image, Form, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { doRegister,addError } from  './LoginActions';\r\n\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  doRegister,\r\n  addError\r\n}\r\nclass RegisterForm extends Component {\r\n  state={\r\n    name:'',\r\n    email:'',\r\n    password:'',\r\n    password1:''\r\n  }\r\n  handleOnChange =(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  handleSubmit = () =>{\r\n    const{name,email,password,password1}=this.state;\r\n    const user={\r\n      name,email,password\r\n    }\r\n    if(name && email && password && password1){\r\n      if(password !== password1){\r\n        this.props.addError('Both passwords not match');\r\n      }else{\r\n        this.props.doRegister(user);\r\n      }\r\n    }else{\r\n      this.props.addError('All fields are mandatory');\r\n    }\r\n    \r\n    \r\n  }\r\n  render() {\r\n    const{message} = this.props\r\n    return (\r\n      <Grid textAlign='center' style={{ height: '100vh'}}>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header>{this.props.registrationSuceessMessage}</Header>\r\n          <Header as='h5' color='teal' textAlign='center'>\r\n            <Image src='assets/logo.png' /> Register if do not have existing account\r\n              </Header>\r\n          <Form className='createJobform'>\r\n\r\n            <Form.Input\r\n              fluid\r\n              icon='user'\r\n              iconPosition='left'\r\n              placeholder='Enter Your Name'\r\n              name='name'\r\n              onChange={this.handleOnChange} />\r\n            <Form.Input\r\n              fluid\r\n              icon='mail'\r\n              iconPosition='left'\r\n              placeholder='Enter your email'\r\n              type='email'\r\n              name='email'\r\n              onChange={this.handleOnChange}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Enter password'\r\n              type='password'\r\n              name='password'\r\n              onChange={this.handleOnChange}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Confirm password'\r\n              type='password'\r\n              name='password1'\r\n              onChange={this.handleOnChange}\r\n            />\r\n\r\n            <Button primary fluid size='large' onClick={this.handleSubmit}>\r\n              Register\r\n                  </Button>\r\n\r\n          </Form>\r\n\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RegisterForm);","import React, { Component } from 'react';\r\nimport { Grid, Header, Image, Form, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { doLogin } from './LoginActions';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  doLogin,\r\n}\r\nclass LoginForm extends Component {\r\n  state={\r\n    email:'',\r\n    password:''\r\n  }\r\n\r\n  handleOnChange = (e) =>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = () =>{\r\n    const {email,password} = this.state;\r\n    const user ={\r\n      email,password\r\n    }\r\n    this.props.doLogin(user);\r\n  }\r\n  render() {\r\n    const{ autheticated } =this.props.auth;\r\n    console.log(autheticated);\r\n    if(autheticated){\r\n      this.props.history.push('/user/profile');\r\n    }\r\n    return (\r\n      <div>\r\n        <Grid textAlign='center' style={{ height: '100vh'}}>\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h5' color='teal' textAlign='center'>\r\n              <Image src='assets/logo.png' /> Log-in to your account if you already have account\r\n      </Header>\r\n            <Form className='createJobform'>\r\n\r\n              <Form.Input\r\n                fluid\r\n                icon='mail'\r\n                iconPosition='left'\r\n                placeholder='E-mail address'\r\n                name='email' \r\n                onChange={this.handleOnChange}/>\r\n\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='Password'\r\n                name='password'\r\n                type='password'\r\n                onChange={this.handleOnChange}\r\n              />\r\n\r\n              <Button primary fluid size='large' onClick={this.handleSubmit}>\r\n                Login\r\n          </Button>\r\n\r\n            </Form>\r\n\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(LoginForm));\r\n","import React, { Component } from 'react';\r\nimport { Grid ,Container,Dimmer,Loader,Header,Divider} from 'semantic-ui-react';\r\nimport RegisterForm from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    auth:state.auth\r\n})\r\n\r\n class AuthHome extends Component {\r\n    render() {\r\n        const {loading} = this.props.auth;\r\n        const{ error } =this.props.auth;\r\n        const{ registrationSuceessMessage } =this.props.auth;\r\n        return (\r\n            <Container>\r\n                 {loading===true ? <Dimmer active>\r\n                    <Loader />\r\n                </Dimmer>:''}\r\n               \r\n                <Header as='h5' textAlign='center' color='red'>{error}</Header>\r\n                <Header as='h5' textAlign='center' color='green'>{registrationSuceessMessage}</Header>\r\n                <Grid columns={2}>\r\n                    <Grid.Column width={8}>\r\n                        <RegisterForm />\r\n                    </Grid.Column>\r\n                  \r\n                    <Grid.Column width={8}>\r\n                    <br/>\r\n                        <LoginForm />\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Divider vertical>OR</Divider>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{})(AuthHome);","import {\r\n     GET_JOBS,ITEMS_LOADING,SET_CITY,\r\n     SET_SKILL, ADD_JOB,DESABLE_LOADING,\r\n     LAUNCH_JOB_APPLIED_SUCCESS_MODAL,\r\n     DISMISS_JOB_APPLIED_SUCCESS_MODAL, \r\n     LAUNCH_JOB_CREATED_SUCCESS_MODAL,\r\n     DISMISS_JOB_CREATED_SUCCESS_MODAL,\r\n     SET_COMPANY, \r\n     SET_SAL,\r\n     SET_EXP,\r\n     CLEAR_FILTERS,\r\n     GET_RECENT_JOBS,\r\n    GET_JOB_BY_ID,\r\n    SET_JOB}\r\n      from \"./HomeConstants\"\r\nimport {API_BASE_URL} from '../../util/Constants';\r\nimport axios from \"axios\";\r\n\r\nexport const getJobs = (skill,city,company,exp,salary) => dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost/search?city='+city+'&skill='+skill+'&company='+company+'&exp='+exp+'&sal='+salary,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:GET_JOBS,\r\n        payload:response\r\n    })).catch(err => dispatch({\r\n        type:DESABLE_LOADING\r\n    }))\r\n}\r\nexport const getRecentJobs = () =>dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'GET',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost/recent?size=10',\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:GET_RECENT_JOBS,\r\n        payload:response\r\n    })).catch(err => dispatch({\r\n        type:DESABLE_LOADING\r\n    }))\r\n}\r\nexport const getJobById = (id) =>dispatch=>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method:'GET',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost?id='+id,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n    })\r\n    .then(response => dispatch({\r\n        type:GET_JOB_BY_ID,\r\n        payload:response\r\n    })).catch(err => dispatch({\r\n        type:DESABLE_LOADING\r\n    }))\r\n}\r\nexport const setItemsLoading = () =>{\r\n    return{\r\n        type:ITEMS_LOADING\r\n    }\r\n}\r\n\r\nexport const setCity = (city) =>{\r\n    return {\r\n        type:SET_CITY,\r\n        payload:city\r\n    }\r\n}\r\nexport const setCompany = (company) =>{\r\n    return{\r\n        type:SET_COMPANY,\r\n        payload:company\r\n    }\r\n}\r\nexport const setSal = (sal) =>{\r\n    return{\r\n        type:SET_SAL,\r\n        payload:sal\r\n    }\r\n}\r\nexport const setExp = (exp) =>{\r\n    return{\r\n        type:SET_EXP,\r\n        payload:exp\r\n    }\r\n}\r\nexport const setSkill = (skill) =>{\r\n    return{\r\n        type:SET_SKILL,\r\n        payload:skill\r\n    }\r\n}\r\nexport const setJob = (job) =>{\r\n    return {\r\n        type:SET_JOB,\r\n        payload:job\r\n    }\r\n}\r\nexport const addJob = (job) => dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method: 'post',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost',\r\n        data: job,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:LAUNCH_JOB_CREATED_SUCCESS_MODAL\r\n    }))\r\n}\r\nexport const applyJob = (jobId,userId) =>dispatch=>{\r\n    dispatch(setItemsLoading());\r\n    axios({\r\n        method:'GET',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost/applyforjob?jobId='+jobId+'&userId='+userId,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n    })\r\n    .then(response => dispatch({\r\n        type:LAUNCH_JOB_APPLIED_SUCCESS_MODAL\r\n    }))\r\n}\r\nexport const uploadResume = (file,jobId) =>dispatch=>{\r\n    dispatch(setItemsLoading());\r\n    const data = new FormData()\r\n    data.append('selectedFile', file, file.name)\r\n    axios({\r\n      method: 'post',\r\n      url: API_BASE_URL+'/api/jobportal/jobpost/uploadFile?jobId=' + jobId,\r\n      data: data\r\n    })\r\n      .then(res=>dispatch({\r\n        type:LAUNCH_JOB_APPLIED_SUCCESS_MODAL\r\n    }))\r\n}\r\n\r\nexport const dismissJobAppliedSuceesModal =()=>{\r\n    return{\r\n        type:DISMISS_JOB_APPLIED_SUCCESS_MODAL\r\n    }\r\n}\r\n\r\nexport const dismissJobCreatedSuccessModal = () =>{\r\n    return{\r\n        type:DISMISS_JOB_CREATED_SUCCESS_MODAL\r\n    }\r\n}\r\nexport const clearFilters =()=>{\r\n    return{\r\n        type:CLEAR_FILTERS\r\n    }\r\n}","export const GET_CONFIG='GET_CONFIG';\r\nexport const GET_JOBS='GET_JOBS';\r\nexport const GET_JOB_BY_ID='GET_JOB_BY_ID';\r\nexport const GET_RECENT_JOBS='GET_RECENT_JOBS'\r\nexport const ITEMS_LOADING='ITEMS_LOADING';\r\nexport const SET_CITY='SET_CITY';\r\nexport const SET_SKILL='SET_SKILL';\r\nexport const SET_COMPANY='SET_COMPANY';\r\nexport const SET_EXP='SET_EXP';\r\nexport const SET_SAL='SET_SAL';\r\nexport const ADD_JOB='ADD_JOB';\r\nexport const DESABLE_LOADING='DESABLE_LOADING';\r\nexport const UPLOAD_RESUME='UPLOAD_RESUME';\r\nexport const LAUNCH_JOB_APPLIED_SUCCESS_MODAL='LAUNCH_JOB_APPLIED_SUCCESS_MODAL';\r\nexport const DISMISS_JOB_APPLIED_SUCCESS_MODAL='DISMISS_JOB_APPLIED_SUCCESS_MODAL';\r\nexport const LAUNCH_JOB_CREATED_SUCCESS_MODAL='LAUNCH_JOB_CREATED_SUCCESS_MODAL';\r\nexport const DISMISS_JOB_CREATED_SUCCESS_MODAL='DISMISS_JOB_CREATED_SUCCESS_MODAL';\r\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\r\nexport const SET_JOB='SET_JOB';","import React, { Component } from 'react';\r\nimport { Button, Segment, Item, Icon, Grid, Label, Header,Modal,Dimmer,Loader } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { uploadResume,dismissJobAppliedSuceesModal,applyJob,setJob } from '../../Home/HomeActions';\r\nimport{withRouter} from 'react-router';\r\n\r\nconst mapStateToProps =(state)=>({\r\n  jobs:state.jobs,\r\n  auth:state.auth\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  uploadResume,\r\n  dismissJobAppliedSuceesModal,\r\n  applyJob,\r\n  setJob\r\n}\r\nclass Job extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      fileName: '',\r\n      file: {},\r\n      jobId: '',\r\n      disableApplyButton: true,\r\n      job:{}\r\n    };\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.applyJob = this.applyJob.bind(this);\r\n  }\r\n  handleOnChange = (id, e) => {\r\n    this.setState({\r\n      fileName: e.target.files[0].name,\r\n      file: e.target.files[0],\r\n      jobId: id\r\n    });\r\n  }\r\n\r\n  uploadResume = (job) => {\r\n    this.props.uploadResume(this.state.file,job.id);\r\n  }\r\n  fomatdate = (date) => {\r\n    var monthNames = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n\r\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n  }\r\n  closeModal = () =>{\r\n    this.props.dismissJobAppliedSuceesModal();\r\n  }\r\n  applyJob = (job) =>{\r\n    if(!this.props.auth.autheticated){\r\n      this.props.history.push('/login');\r\n    }else{\r\n      this.props.setJob(job);\r\n      this.props.applyJob(job.id,this.props.auth.user.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const{ jobAppliedSucessModal} = this.props.jobs;\r\n   const { job } = this.props;\r\n \r\n   \r\n   let img = 'https://logo.clearbit.com/'+job.company+'.com';\r\n   let defaultImage ='https://logo.clearbit.com/company.com';\r\n    return (\r\n      <Segment.Group>\r\n       \r\n        <Segment id={job.id}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image size=\"tiny\" circular src={img} onError={(e)=>{e.target.onerror = null; e.target.src=defaultImage}} />\r\n              <Item.Content>\r\n                <Grid>\r\n                  <Grid.Column width={13}>\r\n                    <Item.Header style={{ fontSize: '20px' }}><pre style={{whiteSpace:'pre-line'}}>{job.jobTitle}</pre></Item.Header>\r\n                  </Grid.Column>\r\n                  <Grid.Column width={1} style={{ float: 'right' }}>\r\n\r\n                  </Grid.Column>\r\n                </Grid>\r\n\r\n                <Item.Description>\r\n                  <span style={{ fontSize: '15px' }}><pre>{job.company},{job.city}</pre></span>\r\n                </Item.Description>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n\r\n        <Segment >\r\n          <span style={{ fontSize: '15px' }}><pre style={{whiteSpace:'pre-line'}}><b>Skills:</b>{job.skills.toString()}</pre></span>\r\n        </Segment>\r\n        <Segment >\r\n          <span style={{ fontSize: '15px' }}><b>Job Description:</b><pre style={{whiteSpace:'pre-line'}}>{job.jobDescription}</pre></span>\r\n        </Segment>\r\n        <Segment>\r\n          <span>\r\n            <Icon name=\"user icon\" /> {job.experienceFrom} - {job.experienceTo} (years)\r\n                            <Icon name=\"rupee sign icon\" /> {job.salaryFrom || 'NA'} - {job.salaryTo} (lakhs)\r\n                            <span style={{ float: 'right' }}>Posted By <b>{job.posterName}</b> on <b>{this.fomatdate(new Date(job.postedOn))}</b> </span>\r\n          </span>\r\n        </Segment>\r\n        <Segment style={{height:'5vw'}}>\r\n        \r\n          <Button floated='right' primary content=\"Apply for this job\"  onClick={() => this.applyJob(job)} />\r\n        </Segment>\r\n\r\n        <Modal\r\n          open={jobAppliedSucessModal}\r\n          size=\"small\">\r\n          <Modal.Content>\r\n            <p>\r\n            You have succesfully applied for the job <b>{this.props.jobs.job.jobTitle}</b> at {this.props.jobs.job.company}\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button primary onClick={this.closeModal}>\r\n              <Icon name='close' /> Close\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Segment.Group>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Job));","import React, { Component, Fragment } from 'react'\r\nimport Job from './Job';\r\nimport { connect } from 'react-redux';\r\nimport { getJobs } from '../../Home/HomeActions';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    jobListing: state.jobs.jobs.data,\r\n    jobs: state.jobs\r\n})\r\nconst mapDispatchToProps = {\r\n    getJobs,\r\n}\r\nclass JobList extends Component {\r\n    componentDidMount() {\r\n        // this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.company,this.props.exp,this.props.salary);\r\n    }\r\n    render() {\r\n        const { jobListing } = this.props;\r\n        return (\r\n            <Fragment>\r\n                {jobListing && jobListing.map((job) => (\r\n                    <Job key={job.id} job={job} />\r\n                ))}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobList);","import React, { Component,Fragment } from 'react';\r\nimport { Checkbox,Form } from 'semantic-ui-react';\r\nimport { setCompany,getJobs } from '../Home/HomeActions';\r\nimport { connect } from 'react-redux'\r\nimport companies from '../../data/companies.json';\r\n\r\n\r\nconst mapStateToProps =(state)=>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    setCompany,\r\n    getJobs\r\n}\r\n\r\nclass FilterByCompanies extends Component {\r\n    state = {\r\n        value:{}\r\n    }\r\n    handleChange = (e, { value }) => {\r\n        this.setState({\r\n            value:value\r\n        })\r\n        this.props.setCompany(value);\r\n        this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,value,this.props.jobs.exp,this.props.jobs.salary);\r\n    }\r\n    render() {\r\n        const {company} = this.props.jobs;\r\n        let companiesList = companies.map((companyItr)=>(\r\n            <Form.Field>\r\n              <Checkbox\r\n                radio\r\n                label={companyItr}\r\n                name='checkboxRadioGroup'\r\n                value={companyItr}\r\n                checked={company === companyItr}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Field>\r\n        )) \r\n        return (\r\n            <Fragment>\r\n                <Form>\r\n                {companiesList}\r\n                </Form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FilterByCompanies);","import React, { Component } from 'react'\r\nimport { Checkbox ,Form} from 'semantic-ui-react';\r\nimport salaries from '../../data/salaries.json';\r\nimport { setSal,getJobs } from '../Home/HomeActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state)=>({\r\n  jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  setSal,\r\n  getJobs\r\n}\r\n class FilterBySalary extends Component {\r\n\r\n    state = {\r\n      value:{}\r\n    }\r\n  handleChange = (e, {value} ) => {\r\n    this.setState({ \r\n      value:value \r\n    })\r\n    this.props.setSal(value);\r\n    this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.jobs.company,this.props.jobs.exp,value);\r\n  }\r\n\r\n    render() {\r\n      const {salary} = this.props.jobs;\r\n      let salariesList = salaries.map((salaryItr)=>(\r\n        <Form.Field>\r\n          <Checkbox\r\n            radio\r\n            label={salaryItr}\r\n            name='checkboxRadioGroup'\r\n            value={salaryItr}\r\n            checked={salary === salaryItr}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Form.Field>\r\n      ))\r\n        return (\r\n        <Form>\r\n        {salariesList}\r\n      </Form>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FilterBySalary);","import React, { Component,Fragment } from 'react'\r\nimport { Checkbox,Form } from 'semantic-ui-react';\r\nimport experiences from '../../data/exp.json';\r\nimport { setExp,getJobs } from '../Home/HomeActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    setExp,\r\n    getJobs\r\n}\r\nclass FilterByExperience extends Component {\r\n    state = {\r\n        value:{}\r\n    }\r\n    handleChange = (e,{value}) =>{\r\n        this.setState({ \r\n            value:value \r\n        })\r\n        this.props.setExp(value);\r\n        this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.company,value,this.props.jobs.salary);\r\n    } \r\n    render() {\r\n        const {exp} = this.props.jobs;\r\n        let experienceList = experiences.map((experience)=>(\r\n            <Form.Field>\r\n              <Checkbox\r\n                radio\r\n                label={experience}\r\n                name='checkboxRadioGroup'\r\n                value={experience}\r\n                checked={exp === experience}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Field>\r\n        ))\r\n        return (\r\n            <Fragment>\r\n                <Form>\r\n                    {experienceList}\r\n            </Form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FilterByExperience);","import React, { Component } from 'react'\r\nimport { Accordion, Icon } from 'semantic-ui-react'\r\nimport FilterByCompanies from './FilterByCompanies'\r\nimport FilterBySalary from './FilterBySalary'\r\nimport FilterByExperience from './FilterByExperience'\r\n\r\n class AccordionLeftFilter extends Component {\r\n  state = { activeIndexes: [0,1,2,3] }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndexes } = this.state;\r\n    const newIndex = activeIndexes;\r\n\r\n    const currentIndexPosition = activeIndexes.indexOf(index);\r\n    if (currentIndexPosition > -1) {\r\n      newIndex.splice(currentIndexPosition, 1);\r\n    } else {\r\n      newIndex.push(index);\r\n    }\r\n\r\n    this.setState({ activeIndexes: newIndex });\r\n  }\r\n\r\n  render() {\r\n    const { activeIndexes } = this.state\r\n\r\n    return (\r\n      <Accordion>\r\n        <Accordion.Title style={{fontSize:'18px'}}\r\n          active={activeIndexes.includes(0)}\r\n          index={0}\r\n          onClick={this.handleClick}>\r\n          <Icon name='dropdown' />\r\n              Salary(lakhs)\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndexes.includes(0)}>\r\n          <FilterBySalary />\r\n        </Accordion.Content>\r\n\r\n       {/*  <Accordion.Title style={{fontSize:'18px'}}\r\n          active={activeIndexes.includes(2)}\r\n          index={2}\r\n          onClick={this.handleClick}>\r\n          <Icon name='dropdown' />\r\n          Companies\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndexes.includes(2)}>\r\n         <FilterByCompanies />\r\n        </Accordion.Content> */}\r\n\r\n\r\n        <Accordion.Title style={{fontSize:'18px'}}\r\n          active={activeIndexes.includes(2)}\r\n          index={2}\r\n          onClick={this.handleClick}>\r\n          <Icon name='dropdown' />\r\n          Experience(years)\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndexes.includes(2)}>\r\n         <FilterByExperience />\r\n        </Accordion.Content>\r\n      </Accordion>\r\n\r\n      \r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default AccordionLeftFilter;","import React, { Component } from 'react'\r\nimport {Checkbox } from 'semantic-ui-react';\r\nclass FilterBySkill extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            <Checkbox label='Java' /><br/>\r\n            <Checkbox label='Spring' /><br/>\r\n            <Checkbox label='Hibernate' /><br/>\r\n            <Checkbox label='ReactJs' /><br/>\r\n            <Checkbox label='Python' /><br/>\r\n            <Checkbox label='Django' /><br/>\r\n            <Checkbox label='AWS' /><br/>\r\n            <Checkbox label='GCP' /><br/>\r\n            <Checkbox label='Devops' /><br/>\r\n            <Checkbox label='AngularJs' /><br/>\r\n            <Checkbox label='VueJs' /><br/>\r\n            <Checkbox label='.NET' /><br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FilterBySkill;\r\n","import React, { Component,Fragment } from 'react'\r\nimport { List,Image } from 'semantic-ui-react';\r\n\r\nclass EmployerList extends Component {\r\n    render() {\r\n        return (\r\n           <Fragment>\r\n               Top Employers\r\n        <List selection verticalAlign='middle'>\r\n       \r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/wipro.com' />\r\n        <List.Content>\r\n            <List.Header>Wipro</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/tcs.com' />\r\n        <List.Content>\r\n            <List.Header>TCS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/amazon.com' />\r\n        <List.Content>\r\n            <List.Header>Amazon</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/persistent.com' />\r\n        <List.Content>\r\n            <List.Header>Persistent</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/kpit.com' />\r\n        <List.Content>\r\n            <List.Header>KPIT</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/capgemini.com' />\r\n        <List.Content>\r\n            <List.Header>Capgemini</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/citibank.com' />\r\n        <List.Content>\r\n            <List.Header>Citi Bank</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/ubs.com' />\r\n        <List.Content>\r\n            <List.Header>UBS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/hcl.com' />\r\n        <List.Content>\r\n            <List.Header>HCL</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/atos.net' />\r\n        <List.Content>\r\n            <List.Header>Atos</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/xoriant.com' />\r\n        <List.Content>\r\n            <List.Header>Xoriant</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/barclays.com' />\r\n        <List.Content>\r\n            <List.Header>Barclays</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n  </List>\r\n  </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default EmployerList;","import React, { Component } from 'react'\r\nimport { Accordion,Icon } from 'semantic-ui-react';\r\nimport FilterBySkill from './FilterBySkill';\r\nimport FilterByCompanies from './FilterByCompanies';\r\nimport EmployerList from '../EmployerList/EmployerList'\r\nclass AccordionRightFilter extends Component {\r\n    state = { activeIndex: 0 }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    const { activeIndex } = this.state\r\n    const newIndex = activeIndex === index ? -1 : index\r\n\r\n    this.setState({ activeIndex: newIndex })\r\n  }\r\n    render() {\r\n        const { activeIndex } = this.state\r\n        return (\r\n/*             <Accordion>\r\n            <Accordion.Title style={{fontSize:'18px'}}\r\n              active={activeIndex === 0}\r\n              index={0}\r\n              onClick={this.handleClick}\r\n            >\r\n              <Icon name='dropdown' />\r\n             Companies\r\n            </Accordion.Title>\r\n            <Accordion.Content active={activeIndex === 0}>\r\n             <FilterByCompanies />\r\n            </Accordion.Content>\r\n            </Accordion> */\r\n          \r\n        <EmployerList />\r\n        )\r\n\r\n        \r\n    }\r\n}\r\nexport default AccordionRightFilter;","import _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Form } from 'semantic-ui-react'\r\nimport source from '../../data/skills.json';\r\nimport { connect } from 'react-redux';\r\nimport { setSkill } from './HomeActions';\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nconst mapDispatchToProps ={\r\n  setSkill\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  jobs:state.jobs\r\n})\r\nclass SearchSkills extends Component {\r\n  state = initialState\r\n\r\n  componentDidMount = () =>{\r\n    this.setState({\r\n      value:this.props.jobs.skill\r\n    })\r\n  }\r\n  handleResultSelect = (e, { result }) => {\r\n    console.log(result);\r\n    this.setState({ value: result.title })\r\n    this.props.setSkill(result.title);\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n    this.props.setSkill(value);\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 10)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={30}>\r\n          <Form>\r\n        <Form.Group widths='equal'>\r\n          <Search placeholder='Skill you are looking for?'\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            {...this.props}\r\n          />\r\n          </Form.Group>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n     \r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchSkills);","import _ from 'lodash'\r\nimport React, { Component,Fragment } from 'react'\r\nimport { Search, Grid,Form,Header } from 'semantic-ui-react'\r\nimport source from '../../data/cities.json';\r\nimport { connect } from 'react-redux';\r\nimport { setCity } from '../Home/HomeActions';\r\nconst initialState = { isLoading: false, results: [], value: '',city:'',skills:[]}\r\n\r\nconst mapStateToProps =(state)=>({\r\n  jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  setCity\r\n}\r\nclass SearchCities extends Component {\r\n  state = initialState\r\n\r\n  componentDidMount = () =>{\r\n    this.setState({\r\n      value:this.props.jobs.city\r\n    })\r\n    console.log(this.props.jobs.city);\r\n  }\r\n  handleResultSelect = (e, { result }) => {\r\n    this.setState({ value: result.title })\r\n    this.props.setCity(result.title);\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n    this.props.setCity(value);\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 10)\r\n  }\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    return (\r\n      <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Form>\r\n          <Form.Group widths='equal'>\r\n          <Search placeholder={'Enter city'}\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            {...this.props}\r\n            defaultValue={this.props.jobs.city}\r\n          />\r\n          </Form.Group>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchCities);","import React, { Component,Fragment } from 'react'\r\nimport { Grid,Button,Dimmer,Loader,Icon,Message } from 'semantic-ui-react';\r\nimport JobList from '../JobList/JobList';\r\nimport AccordionLeftFilter from '../../Filters/AccordionLeftFilter';\r\nimport AccordionRightFilter from '../../Filters/AccordionRightFilter';\r\nimport SearchSkills from '../../Home/SearchSkills';\r\nimport SearchCities from '../../Home/SearchCities';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getJobs,clearFilters, getRecentJobs } from '../../Home/HomeActions';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    getJobs,\r\n    clearFilters,\r\n    getRecentJobs\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    state={\r\n        display:'none'\r\n    }\r\n    searchJobs =()=>{\r\n        this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.jobs.company,this.props.jobs.exp,this.props.jobs.salary);\r\n        this.setState({\r\n            display:'block'\r\n        })\r\n    }\r\n    clearFilters = () =>{\r\n        this.props.clearFilters();\r\n        this.props.getRecentJobs()\r\n    }\r\n    render() {\r\n        const { loading } =this.props.jobs;\r\n        const { data } = this.props.jobs.jobs;\r\n       \r\n        return (\r\n            <Fragment>\r\n                {loading===true ? <Dimmer active>\r\n                    <Loader />\r\n                </Dimmer>:''}\r\n            <Grid>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={5}><SearchSkills/></Grid.Column>\r\n                    <Grid.Column width={5}><SearchCities /></Grid.Column>\r\n                    <Grid.Column width={2}><Button content='Search' primary rounded as={Link} to='/dashboard' onClick={this.searchJobs}/></Grid.Column>\r\n                    <Grid.Column width={3}><Button primary rounded onClick={this.clearFilters}>Clear Filters <Icon name='trash'/></Button></Grid.Column>\r\n                    </Grid>\r\n            <hr color='#D0CCCB'/><br/>\r\n            { data && data.length>0 ?<Grid>\r\n                <Grid.Column width={3}><AccordionLeftFilter /></Grid.Column>\r\n                <Grid.Column width={10}><JobList /></Grid.Column>\r\n                <Grid.Column width={3}><AccordionRightFilter /></Grid.Column>\r\n                </Grid>:\r\n                 <Message warning>\r\n                 <Message.Header>No results found for your search,Plase refine your search criteria </Message.Header>\r\n               </Message>\r\n            }\r\n                </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard)","import React, { Component,Fragment } from 'react'\r\nimport { Grid,Button,Header } from 'semantic-ui-react';\r\nimport SearchCities from './SearchCities';\r\nimport SearchSkills from './SearchSkills';\r\nimport { getJobs,getRecentJobs } from './HomeActions';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst mapStateToProps = (state) =>({\r\n    jobs:state.jobs\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    getJobs,\r\n    getRecentJobs\r\n}\r\nclass HomeForSearchers extends Component {\r\nstate={\r\n    skillError:'',\r\n    cityError:''\r\n}\r\n    searchJobs =()=>{\r\n        const { skill } = this.props.jobs;\r\n        const { city } = this.props.jobs;\r\n        if(skill && skill!==undefined){\r\n            if(city){\r\n                this.props.getJobs(this.props.jobs.skill,this.props.jobs.city,this.props.jobs.company,this.props.jobs.exp,this.props.jobs.salary);\r\n                this.props.history.push('/dashboard')\r\n            }else{\r\n                this.setState({\r\n                    cityError:'This Field City is mandatory'\r\n                })\r\n            }\r\n\r\n        }else{\r\n            this.setState({\r\n                skillError:'This Field Skill is mandatory'\r\n            })\r\n        }\r\n    }\r\n    getMostRecentJobs =()=>{\r\n        this.props.getRecentJobs();\r\n        this.props.history.push('/dashboard')\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Grid>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={5}><SearchSkills/></Grid.Column>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={5}><SearchCities /></Grid.Column>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={2}><Button content='Search' primary rounded  onClick={this.searchJobs} /></Grid.Column>\r\n                    </Grid>\r\n                    <br/>\r\n                <Grid style={{marginTop:'-4%'}}>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={6}><Header as='h6' color='red'>{this.state.skillError}</Header></Grid.Column>\r\n                    <Grid.Column width={6}> <Header as='h6' color='red'>{this.state.cityError}</Header></Grid.Column>\r\n                    </Grid>\r\n                    <br/>\r\n               {/*  <Grid>\r\n                    <Grid.Column width={1}></Grid.Column>\r\n                    <Grid.Column width={10}> Have look at <a onClick={this.getMostRecentJobs}> Recently added jobs</a></Grid.Column>\r\n                    </Grid> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(HomeForSearchers))","import React, { Component,Fragment } from 'react'\r\nimport { Grid,Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomeForPosters extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            <Grid>\r\n                <Grid.Column width={1}></Grid.Column>\r\n                <Grid.Column width={9}>If you have job openings in your organization,you can post current job here and take benefit of your organizations's referral programme.</Grid.Column>\r\n                <Grid.Column width={3}><Button content='Post New Job' primary rounded as={Link} to='/create' /></Grid.Column>\r\n                </Grid>\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default HomeForPosters;","import React, { Component } from 'react';\r\nimport { List, Image,Header } from 'semantic-ui-react';\r\n\r\nexport default class EmployerListHome extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header as='h5' color='teal'>Top Employers</Header>\r\n                <List horizontal>\r\n                <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/wipro.com' />\r\n        <List.Content>\r\n            <List.Header>Wipro</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/tcs.com' />\r\n        <List.Content>\r\n            <List.Header>TCS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/amazon.com' />\r\n        <List.Content>\r\n            <List.Header>Amazon</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/persistent.com' />\r\n        <List.Content>\r\n            <List.Header>Persistent</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/kpit.com' />\r\n        <List.Content>\r\n            <List.Header>KPIT</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/capgemini.com' />\r\n        <List.Content>\r\n            <List.Header>Capgemini</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/citibank.com' />\r\n        <List.Content>\r\n            <List.Header>Citi Bank</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/ubs.com' />\r\n        <List.Content>\r\n            <List.Header>UBS</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/hcl.com' />\r\n        <List.Content>\r\n            <List.Header>HCL</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/atos.net' />\r\n        <List.Content>\r\n            <List.Header>Atos</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/xoriant.com' />\r\n        <List.Content>\r\n            <List.Header>Xoriant</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n        <Image avatar src='https://logo.clearbit.com/barclays.com' />\r\n        <List.Content>\r\n            <List.Header>Barclays</List.Header>\r\n        </List.Content>\r\n        </List.Item>\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Button, Icon, List, Grid, Image } from 'semantic-ui-react'\r\nimport { getRecentJobs } from './HomeActions';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport Job from '../Jobs/JobList/Job';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    jobListing: state.jobs.jobs.data\r\n})\r\nconst mapDispatchToProps = {\r\n    getRecentJobs\r\n}\r\n\r\nclass RecentJobs extends Component {\r\n    componentDidMount() {\r\n        this.props.getRecentJobs()\r\n    }\r\n    fomatdate = (date) => {\r\n        var monthNames = [\r\n            \"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\", \"July\",\r\n            \"August\", \"September\", \"October\",\r\n            \"November\", \"December\"\r\n        ];\r\n        var day = date.getDate();\r\n        var monthIndex = date.getMonth();\r\n        var year = date.getFullYear();\r\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n    }\r\n    viewJobDetails = (job) => {\r\n\r\n        this.props.history.push('/jobDetails/' + job.id)\r\n    }\r\n    render() {\r\n        const { jobListing } = this.props;\r\n        return (\r\n            <div>\r\n                <Fragment>\r\n                    <List divided relaxed>\r\n                        {jobListing && jobListing.map((job) => (\r\n\r\n                            <List.Item>\r\n                                <List.Icon style={{ width: '5%' }}><Image src={`https://logo.clearbit.com/${job.company}.com`} size='medium' circular /></List.Icon>\r\n                                <List.Content>\r\n                                    <List.Header as='a'>{job.jobTitle} in {job.company} for {job.city} location.</List.Header>\r\n                                    <Grid>\r\n                                        <Grid.Column mobile={13} tablet={13} computer={13}>\r\n                                            <br />\r\n                                            <List.Description as='a'><b>Job Description:</b><pre style={{ whiteSpace: 'pre-line' }}>{job.jobDescription}</pre></List.Description>\r\n                                            <br />\r\n                                            <List.Description as='a'><b>Skills: </b>{job.skills.toString()}</List.Description>\r\n                                            <List.Description as='a'><b>Experience: </b>{job.experienceFrom} to {job.experienceTo} years</List.Description>\r\n                                            <List.Description as='a'><b>Salary: </b>{job.salaryFrom} to {job.salaryTo} LPA</List.Description>\r\n                                            <span style={{ float: 'right' }}>Posted By <b>{job.posterName}</b> on <b>{this.fomatdate(new Date(job.postedOn))}</b> </span>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column mobile={3} tablet={3} computer={3}><Button primary floated='right' onClick={() => this.viewJobDetails(job)}>View Details</Button></Grid.Column>\r\n                                    </Grid>\r\n                                </List.Content>\r\n\r\n                            </List.Item>\r\n\r\n                        ))}\r\n                    </List>\r\n\r\n                </Fragment>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RecentJobs))\r\n","import React, { Component } from 'react'\r\nimport { Button, Card, Image } from 'semantic-ui-react'\r\n\r\nclass Cards extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card.Group>\r\n                    \r\n    <Card>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n        />\r\n        <Card.Header>Create Job Alert</Card.Header>\r\n        <Card.Meta>Friends of Elliot</Card.Meta>\r\n        <Card.Description>\r\n          Steve wants to add you to the group <strong>best friends</strong>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='green'>\r\n            Approve\r\n          </Button>\r\n          <Button basic color='red'>\r\n            Decline\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n    <Card>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/molly.png'\r\n        />\r\n        <Card.Header>Write a review</Card.Header>\r\n        <Card.Meta>New User</Card.Meta>\r\n        <Card.Description>\r\n          Molly wants to add you to the group <strong>musicians</strong>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='green'>\r\n            Approve\r\n          </Button>\r\n          <Button basic color='red'>\r\n            Decline\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n    <Card>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg'\r\n        />\r\n        <Card.Header>Share Interview Questions</Card.Header>\r\n        <Card.Meta>New User</Card.Meta>\r\n        <Card.Description>\r\n          Jenny requested permission to view your contact details\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='green'>\r\n            Approve\r\n          </Button>\r\n          <Button basic color='red'>\r\n            Decline\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  </Card.Group>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Cards;","import React, { Component } from 'react'\r\nimport HomeForSearchers from './HomeForSearchers';\r\nimport HomeForPosters from './HomeForPosters';\r\nimport {Grid,Header,Responsive,Message,Button } from 'semantic-ui-react';\r\nimport EmployerListHome from '../EmployerList/EmployerListHome';\r\nimport Cards from '../Home/Cards';\r\nimport RecentJobs from './RecentJobs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n               <div style={{border:'1px '}}  >\r\n                   <br/>\r\n                <Grid>\r\n                    <Grid.Column  mobile={1} tablet={1} computer={2}><h1 style={{color:'#00b5ad'}}>ReferralJobz</h1></Grid.Column>\r\n                    <Grid.Column  mobile={13} tablet={13} computer={13}> <HomeForSearchers /></Grid.Column>\r\n                    </Grid>\r\n                </div><hr/>\r\n                    \r\n                   \r\n                    { <div>\r\n                    <h3 style={{color:'#00b5ad'}}>Recently Added Jobs</h3><br/>\r\n                    <Grid.Column  mobile={1} tablet={1} computer={2}></Grid.Column>\r\n                    <Grid.Column  mobile={13} tablet={13} computer={13}> <RecentJobs /></Grid.Column>\r\n                    \r\n                        </div> }\r\n                  {/*   <h3>How ReferralJobz works?</h3>\r\n                     \r\n                        <p className='heading-text'>Step1: Job posters will post job opening from their organization on ReferralJobz.</p>\r\n                        <p className='heading-text'>Step2: Candidates looking for job will search jobs they are interesred in on ReferralJobz.</p>\r\n                        <p className='heading-text'>Step3: If candidates found matching job, they will apply job and submit the resume on ReferralJobz</p>\r\n                        <p className='heading-text'>Step4: Job poster will receive the resume and they can upload that resume in their internal job portal.</p>\r\n                        <p className='heading-text'>Step5: If application matches, candidate will get further notificaitions.</p>\r\n                        Its <b>win win</b> situation for both job applicant where they will get job and job posters will get their referral benefit.\r\n                         */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"," const cities = [\r\n    {\r\n      key: 'Pune',\r\n      text: 'Pune',\r\n      value: 'Pune',\r\n    },\r\n    {\r\n      key: 'Mumbai',\r\n      text: 'Mumbai',\r\n      value: 'Mumbai',\r\n    },\r\n    {\r\n      key: 'Nashik',\r\n      text: 'Nashik',\r\n      value: 'Nashik',\r\n    },\r\n    {\r\n      key: 'Banglore',\r\n      text: 'Banglore',\r\n      value: 'Banglore',\r\n    },\r\n    {\r\n      key: 'Delhi',\r\n      text: 'Delhi',\r\n      value: 'Delhi',\r\n    },\r\n    {\r\n      key: 'Hydrabad',\r\n      text: 'Hydrabad',\r\n      value: 'Hydrabad',\r\n    },\r\n  ]\r\n  export default cities;","import React, { Component } from 'react';\r\nimport _ from 'lodash'\r\nimport { Form, Grid, Dropdown, TextArea, Header, Button, Input, Search, Icon, Modal, Container } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport source from '../../../data/companies.json';\r\nimport cities from '../../../data/dropdownCities';\r\nimport { addJob,dismissJobCreatedSuccessModal } from '../../Home/HomeActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs:state.jobs,\r\n  auth:state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  addJob,\r\n  dismissJobCreatedSuccessModal\r\n}\r\nconst initialState = { isLoading: false, results: [], company: '', jobPost: {} }\r\nclass CreateJobForm extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    results: [],\r\n    value: '',\r\n    jobPost: {},\r\n\r\n    jobTitle: '',\r\n    company: '',\r\n    city: '',\r\n    address: '',\r\n    jobDescription: '',\r\n    skills: [],\r\n    experienceFrom: '',\r\n    experienceTo: '',\r\n    salaryFrom: '',\r\n    salaryTo: '',\r\n    posterName: '',\r\n    posterEmail: '',\r\n    isError: false,\r\n\r\n    launchSuccessModal: false\r\n\r\n  };\r\n\r\n  handleResultSelect = (e, { result }) => {\r\n    this.setState(\r\n      {\r\n        value: result.title,\r\n        company: result.title\r\n      })\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value, company: value })\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 10)\r\n  }\r\n\r\n  handleOnCityChange = (e, data) => {\r\n    this.setState({\r\n      city: data.value\r\n    })\r\n  }\r\n\r\n  handleOnExpFromChange = (e, data) => {\r\n    this.setState({\r\n      experienceFrom: data.value\r\n    })\r\n  }\r\n\r\n  handleOnExpToChange = (e, data) => {\r\n    this.setState({\r\n      experienceTo: data.value\r\n    })\r\n  }\r\n\r\n  handleOnSalaryFromChange = (e, data) => {\r\n    this.setState({\r\n      salaryFrom: data.value\r\n    })\r\n  }\r\n\r\n  handleOnSalaryToChange = (e, data) => {\r\n    this.setState({\r\n      salaryTo: data.value\r\n    })\r\n  }\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      posterName: e.target.value\r\n    })\r\n  }\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      posterEmail: e.target.value\r\n    })\r\n  }\r\n  handleJobTitleChange = (e) => {\r\n    this.setState({\r\n      jobTitle: e.target.value\r\n    })\r\n  }\r\n\r\n  handleJobDescChange = (e) => {\r\n    this.setState({\r\n      jobDescription: e.target.value\r\n    })\r\n  }\r\n  handleSkillsChange = (e) => {\r\n    this.setState({\r\n      skills: e.target.value.split(\",\")\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const { jobTitle, company, city, address, jobDescription, skills, experienceFrom, experienceTo, salaryFrom, salaryTo, posterName, posterEmail } = this.state;\r\n    const jobPost = {\r\n      jobTitle, company, city, address, jobDescription, skills, experienceFrom, experienceTo, salaryFrom, salaryTo, posterName, posterEmail\r\n    }\r\n    if (this.validateInput()) {\r\n      this.props.addJob(jobPost);\r\n    } else {\r\n      this.setState({\r\n        isError: true\r\n      })\r\n    }\r\n\r\n  }\r\n  validateInput = () => {\r\n    const { jobTitle, company, city, address, jobDescription, skills, experienceFrom, experienceTo, salaryFrom, salaryTo, posterName, posterEmail } = this.state;\r\n    if (jobTitle && company && city && jobDescription && skills && experienceFrom && experienceTo && salaryFrom && salaryTo && posterName && posterEmail) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  closeModal = ()=>{\r\n    this.props.dismissJobCreatedSuccessModal();\r\n  }\r\n  render() {\r\n    const { isLoading, value, results } = this.state;\r\n    const{ jobCreatedSucessModal } = this.props.jobs;\r\n    const{ autheticated } =this.props.auth;\r\n    if(!autheticated){\r\n      this.props.history.push('/login');\r\n    }\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Form className='createJobform'>\r\n            <Header color='teal' content='Job Details' />\r\n            {this.state.isError && <Header color='red' content='All Fields are mandatory' />}\r\n            <Form.Group>\r\n              <Input\r\n                style={{ width: '100%' }}\r\n                placeholder='Job Title e.g. Senior Java Developer'\r\n                onChange={this.handleJobTitleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <TextArea\r\n                placeholder='Job Description e.g Roles and responsibilities'\r\n                onChange={this.handleJobDescChange}\r\n                rows={10}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <TextArea\r\n                style={{ width: '100%' }}\r\n                placeholder='Add comma seprated Skills e.g Java,AngularJs,Aws'\r\n                onChange={this.handleSkillsChange}\r\n                rows={5}\r\n              />\r\n\r\n            </Form.Group>\r\n          \r\n              <Grid>\r\n                <Grid.Column width={8}>\r\n                  <Search placeholder={'Enter Company'}\r\n                     loading={isLoading}\r\n                     fluid\r\n                     onResultSelect={this.handleResultSelect}\r\n                     onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                       leading: true,\r\n                     })}\r\n                     results={results}\r\n                     value={value}\r\n                     {...this.props}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                  <Dropdown\r\n                    placeholder='Enter City'\r\n                    fluid\r\n                    selection\r\n                    options={cities}\r\n                    onChange={this.handleOnCityChange}\r\n                  />\r\n                </Grid.Column>\r\n              </Grid>\r\n            \r\n            \r\n              <Grid>\r\n                <Grid.Column width={8}>\r\n                  <Input\r\n                    type='numbers'\r\n                    placeholder='Experience From in years'\r\n                    onChange={this.handleOnExpFromChange}\r\n                    fluid\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                  <Input\r\n                    placeholder='Experience To in years'\r\n                    onChange={this.handleOnExpToChange}\r\n                    fluid\r\n                  />\r\n                </Grid.Column>\r\n              </Grid>\r\n           \r\n           <Grid>\r\n             <Grid.Column width={8}>\r\n              <Input\r\n                placeholder='Salary From in lakhs'\r\n                onChange={this.handleOnSalaryFromChange}\r\n                fluid\r\n              />\r\n              </Grid.Column>\r\n              <Grid.Column width={8}>\r\n              <Input\r\n                placeholder='Salary To in lakhs'\r\n                onChange={this.handleOnSalaryToChange}\r\n                fluid\r\n              />\r\n              </Grid.Column>\r\n              </Grid>\r\n           \r\n            <Header color='teal' content='Job Poster Details' />\r\n            <Form.Group widths='equal'>\r\n              <Form.Input\r\n                fluid\r\n                id='form-subcomponent-shorthand-input-first-name'\r\n                label='Name'\r\n                placeholder='Name'\r\n                onChange={this.handleNameChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                id='form-subcomponent-shorthand-input-last-name'\r\n                label='Applications will be sent to this email address'\r\n                placeholder='Email'\r\n                onChange={this.handleEmailChange}\r\n              />\r\n            </Form.Group>\r\n            <Button primary style={{ marginLeft: '30%' }} onClick={this.handleSubmit}>Submit Job</Button>\r\n            <Button as={Link} to='/'>Cancel</Button>\r\n          </Form>\r\n        </Grid.Column>\r\n\r\n\r\n        <Modal\r\n          open={jobCreatedSucessModal}\r\n          size=\"small\">\r\n          <Modal.Content>\r\n            <p>\r\n              You have succesfully created new job.\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button primary onClick={this.closeModal}>\r\n              <Icon name='close' /> Close\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateJobForm);","import { GET_JOBS_BY_EMAIL,DISABLE_LOADING, LOADING} from './UserConstants';\r\nimport { LAUNCH_JOB_APPLIED_SUCCESS_MODAL } from '../Home/HomeConstants';\r\nimport axios from \"axios\";\r\nimport {API_BASE_URL} from '../../util/Constants';\r\n\r\nexport const getJobsByEmail = (email) => dispatch=>{\r\n    axios({\r\n        method: 'GET',\r\n        url: API_BASE_URL+'/api/jobportal/jobpost/byEmail?email='+email,\r\n        config: { headers: {'Content-Type': 'application/json' }}\r\n        })\r\n    .then(response => dispatch({\r\n        type:GET_JOBS_BY_EMAIL,\r\n        payload:response.data\r\n    })).catch(err => dispatch({\r\n        type:DISABLE_LOADING\r\n    }))\r\n}\r\n\r\nexport const uploadResume = (file,userId) => dispatch=>{\r\n    dispatch(setLoading());\r\n    const data = new FormData()\r\n    data.append('selectedFile', file, file.name)\r\n    axios({\r\n      method: 'post',\r\n      url: API_BASE_URL+'/api/jobportal/docs/resume?userId=' + userId,\r\n      data: data\r\n    })\r\n      .then(res=>dispatch({\r\n        type:LAUNCH_JOB_APPLIED_SUCCESS_MODAL\r\n    }))\r\n}\r\nexport const setLoading = () => dispatch=>{\r\n    dispatch({\r\n        type:LOADING,\r\n    })\r\n}","export const GET_JOBS_BY_EMAIL='GET_JOBS_EMAIL';\r\nexport const LOADING='LOADING';\r\nexport const DISABLE_LOADING='DISABLE_LOADING';\r\nexport const UPLOAD_RESUME='UPLOAD_RESUME';","import React, { Component } from 'react'\r\nimport { Grid, Message, Button, Card, Image, Icon, Modal } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { uploadResume } from '../User/UserActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  uploadResume\r\n}\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n  }\r\n\r\n\r\n  handleOnChange = (e) => {\r\n    console.log('heelo');\r\n    console.log(e.target.files[0].name);\r\n    console.log(e.target.files[0]);\r\n    console.log(this.props.user.id);\r\n    this.props.uploadResume(e.target.files[0], this.props.user.id);\r\n  }\r\n  render() {\r\n    const { autheticated } = this.props.auth;\r\n    if (!autheticated) {\r\n      console.log(this.props);\r\n      this.props.history.push('/');\r\n\r\n    }\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={5}>\r\n\r\n          <Card>\r\n            <Image circular src={this.props.auth.user.profilePhotoUrl} wrapped ui={false} />\r\n            <Card.Content>\r\n              <Card.Header>{this.props.auth.user.name}</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>{this.props.auth.user.createdAt}</span>\r\n              </Card.Meta>\r\n              <Card.Description>\r\n                {this.props.auth.user.email}\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n\r\n            </Card.Content>\r\n          </Card>\r\n\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n\r\n\r\n          <Card style={{ width: '100%' }}>\r\n\r\n            <Card.Content >\r\n              <Card.Header>Name:Nitin Pawar<Button as={Link} to='/user/update' color='teal' style={{ float: 'right' }} className=\"ui circular icon button\"><i aria-hidden=\"true\" class=\"settings icon\"></i></Button></Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>{this.props.auth.user.createdAt}</span>\r\n              </Card.Meta>\r\n              <Card.Description>\r\n                Primary Skills:Java, Reacts,Angularjs,ASW,Oracle, Postgress,Testng,Mysql,Microservices\r\n      <hr />\r\n      Current Location:Pune\r\n      <hr />\r\n      DOB:27.04/1992\r\n      <hr />\r\n      Company:Altimetrik\r\n      <hr />\r\n      Email:achievers.nitin@gmail.com\r\n      <hr />\r\n      PHone:+91 8975972716\r\n      <hr />\r\n      Github Link:\r\n      <hr />\r\n      Stackoverflow link:\r\n      <hr />\r\n      Resume Link:<a href={this.props.auth.user.resumeUrl} target=\"_blank\">Download resume</a>\r\n\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n\r\n            </Card.Content>\r\n          </Card>\r\n          <Button.Group>\r\n            <Button color='teal' as={Link} to='/user/createnewjob'>Post New Job</Button><hr />\r\n            <Button color='teal' as={Link} to='/user/myjobs'>View Jobs Posted By Me</Button><hr />\r\n            <Button color='teal' as={Link} to='/user/createnewjob'>View My Job Applications</Button><hr />\r\n            <Button color='teal' as=\"label\" icon='upload' htmlFor=\"file\" title='upload resume'>Upload Resume</Button>\r\n            <input type=\"file\" id=\"file\" style={{ display: \"none\" }} onChange={this.handleOnChange} />\r\n          </Button.Group>\r\n\r\n        </Grid.Column>\r\n\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {})(Profile);","import React, { Component, Fragment } from 'react'\r\nimport { Table, Header, Button, GridColumn } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getJobsByEmail } from './UserActions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs: state.user.jobs,\r\n  user: state.auth.user,\r\n  auth: state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  getJobsByEmail\r\n}\r\nclass MyJobs extends Component {\r\n\r\n  fomatdate = (date) => {\r\n    var monthNames = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n\r\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n  }\r\n  componentDidMount() {\r\n    this.props.getJobsByEmail(this.props.user.email);\r\n  }\r\n  handleViewDetails = (id) => {\r\n    this.props.history.push('/user/myjobs/' + id);\r\n  }\r\n  render() {\r\n    const { autheticated } = this.props.auth;\r\n    if (!autheticated) {\r\n      this.props.history.push('/');\r\n    }\r\n    const { jobs } = this.props;\r\n    return (\r\n      <Fragment>\r\n       {jobs.length>0?<Table celled>\r\n          <Table.Header>\r\n            <Table.Row >\r\n              <Table.HeaderCell>Sr.No</Table.HeaderCell>\r\n              <Table.HeaderCell>Job Title</Table.HeaderCell>\r\n              <Table.HeaderCell>Company</Table.HeaderCell>\r\n              <Table.HeaderCell>Created at</Table.HeaderCell>\r\n              <Table.HeaderCell>Actions</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {jobs.map((job, index) => (\r\n              <Table.Row warning>\r\n                <Table.Cell>{index + 1}</Table.Cell>\r\n                <Table.Cell>{job.jobTitle}</Table.Cell>\r\n                <Table.Cell> {job.company}</Table.Cell>\r\n                <Table.Cell>{this.fomatdate(new Date(job.postedOn))}</Table.Cell>\r\n                <Table.Cell> <GridColumn><Button color='teal' onClick={() => this.handleViewDetails(job.id)}>View Details</Button></GridColumn></Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n\r\n          </Table.Body>\r\n        </Table>\r\n        :<Fragment><br/><Header as='h3' color='heal'>You have not created any jobs as of now.</Header></Fragment>\r\n        }\r\n        <Button as={Link} to='/user/createnewjob' content='Add New Job' primary floated='right' />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobs);\r\n","import React, { Component } from 'react';\r\nimport { Segment, Item, Grid, Icon, Header,Label,Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    const jobPostId = ownProps.match.params.id;\r\n    let jobPost ={};\r\n    if(jobPostId && state.user.jobs.length>0){\r\n        jobPost = state.user.jobs.filter(job=>job.id === jobPostId)[0];\r\n      }\r\n      return {\r\n        jobPost\r\n      }\r\n}\r\nclass JobDetails extends Component {\r\n    fomatdate = (date) => {\r\n        var monthNames = [\r\n          \"January\", \"February\", \"March\",\r\n          \"April\", \"May\", \"June\", \"July\",\r\n          \"August\", \"September\", \"October\",\r\n          \"November\", \"December\"\r\n        ];\r\n    \r\n        var day = date.getDate();\r\n        var monthIndex = date.getMonth();\r\n        var year = date.getFullYear();\r\n    \r\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n      }\r\n    render() {\r\n        const{jobPost} =this.props;\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <Header color='teal'>Job Details for:{jobPost.id}</Header>\r\n              \r\n                <Segment.Group>\r\n                    <Segment id={jobPost.id}>\r\n                        <Item.Group>\r\n                            <Item>\r\n                                <Item.Content>\r\n                                    <Grid>\r\n                                        <Grid.Column width={13}>\r\n                                            <Item.Header style={{ fontSize: '20px' }}><pre style={{ whiteSpace: 'pre-line' }}>Job Title:{jobPost.jobTitle}</pre></Item.Header>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={1} style={{ float: 'right' }}>\r\n\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n\r\n                                    <Item.Description>\r\n                                        <span style={{ fontSize: '15px' }}><pre><b>Company:</b>{jobPost.company}</pre></span>\r\n                                        <span style={{ fontSize: '15px' }}><pre><b>City:</b>{jobPost.city}</pre></span>\r\n                                    </Item.Description>\r\n                                </Item.Content>\r\n                            </Item>\r\n                        </Item.Group>\r\n                    </Segment>\r\n\r\n                    <Segment >\r\n                        <span style={{ fontSize: '15px' }}><pre style={{ whiteSpace: 'pre-line' }}><b>Skills:</b>{jobPost.skills.toString()}</pre></span>\r\n                    </Segment>\r\n                    <Segment >\r\n                        <span style={{ fontSize: '15px' }}><b>Job Description:</b><pre style={{ whiteSpace: 'pre-line' }}>{jobPost.jobDescription}</pre></span>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <span>\r\n                           <b>Experience Required(years):</b><br/>\r\n                           Experience From: {jobPost.experienceFrom}-\r\n                           Experience To:{jobPost.experienceTo}<br/>\r\n                           <b>Salary Offered(lakhs):</b> <br/>\r\n                           Salary From:{jobPost.salaryFrom || 'NA'}-\r\n                           Salary To:{jobPost.salaryTo}\r\n                        </span>\r\n                    </Segment>   \r\n                    <Segment>\r\n                    <span style={{ fontSize: '15px' }}><pre style={{ whiteSpace: 'pre-line' }}><b>Posted On:</b>{this.fomatdate(new Date(jobPost.postedOn))}</pre></span>\r\n                        </Segment>      \r\n                </Segment.Group>\r\n                <Button floated='right' color='teal' as={Link} to='/user/myjobs'><Icon name='backward'></Icon>Go To My Jobs</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{})(JobDetails);","import React, { Component, Fragment } from 'react'\r\nimport { Form, TextArea, Button, List, Divider, Header, Segment } from 'semantic-ui-react';\r\nimport {\r\n    DateInput,\r\n    TimeInput,\r\n    DateTimeInput,\r\n    DatesRangeInput\r\n} from 'semantic-ui-calendar-react';\r\nclass AddNewInterviewQuestions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: '',\r\n            time: '',\r\n            dateTime: '',\r\n            datesRange: '',\r\n            company: '',\r\n            location: '',\r\n            designation: '',\r\n            date: '',\r\n            question: '',\r\n            questionsCount: 1,\r\n            questions: [],\r\n\r\n        };\r\n    }\r\n\r\n    handleChange = (event, { name, value }) => {\r\n        if (this.state.hasOwnProperty(name)) {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    addQuestion = () => {\r\n        if (this.state.question) {\r\n            this.setState({\r\n                questions: [...this.state.questions, this.state.question],\r\n                question: ''\r\n            })\r\n        }\r\n\r\n    }\r\n    removeQuestion = (index) => {\r\n        this.setState({\r\n            questions: this.state.questions.filter((_, i) => i !== index)\r\n        })\r\n    }\r\n\r\n    handleQuestionChange = (event) => {\r\n        this.setState({ question: event.target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Segment>\r\n                    <React.Fragment>\r\n                        \r\n                        \r\n                        <Form>\r\n                        <Segment>\r\n                        <Header as='h3'>Interview Details</Header>\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Input fluid label='Company Name' placeholder='Company Name' />\r\n                                <Form.Input fluid label='Location' placeholder='Location' />\r\n\r\n\r\n                            </Form.Group>\r\n                            <Form.Group >\r\n                                <Form.Input fluid label='Job Title' placeholder='Job Title' width={14} />\r\n                                <Form.Input fluid label='Interview Date' placeholder='Interview Date'>\r\n                                    <DateInput animation='none'\r\n                                        name=\"date\"\r\n                                        placeholder=\"Date\"\r\n                                        value={this.state.date}\r\n                                        iconPosition=\"left\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </Form.Input>\r\n\r\n                            </Form.Group>\r\n                            </Segment>\r\n                            <Divider hidden></Divider>\r\n                           \r\n                            <Segment>\r\n                            <Header as='h3'>Add Interview Questions</Header>\r\n                            <TextArea placeholder={'Question:' + (this.state.questions.length + 1)} value={this.state.question} style={{ minHeight: 100 }} onChange={this.handleQuestionChange} />\r\n                            \r\n                            <br /><br />\r\n                            <Button floated='right' content='Add New Question' onClick={() => { this.addQuestion() }}></Button>\r\n                            <br /><br />\r\n                            </Segment>\r\n                            <Divider hidden></Divider>\r\n                           \r\n                            {this.state.questions.length>0 ? <Segment>\r\n                            <Header as='h3'>Interview Questions Added so far</Header>\r\n                            {this.state.questions.map((question, index) => (\r\n                                <List divided verticalAlign='middle'>\r\n                                    <List.Item>\r\n                                        <List.Content >\r\n\r\n                                        </List.Content>\r\n\r\n                                        <List.Content>{index + 1}.{question}</List.Content>\r\n\r\n                                        <Button size='small' circular color='google plus' icon='delete' floated='right' onClick={() => { this.removeQuestion(index) }}></Button>\r\n                                    </List.Item>\r\n                                </List>\r\n                            ))}\r\n                            </Segment>:''}\r\n                        </Form>\r\n                    </React.Fragment>\r\n                    <Button primary floated='right'>Submit Form</Button>\r\n                    <Button floated='right'>Cancel</Button><br/><br/>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewInterviewQuestions;","import React, { Component,Fragment } from 'react';\r\nimport { Table, Header, Button, GridColumn } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getJobsByEmail } from './UserActions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    jobs: state.user.jobs,\r\n    user: state.auth.user,\r\n    auth: state.auth\r\n  })\r\n  const mapDispatchToProps = {\r\n    getJobsByEmail\r\n  }\r\nclass MyInterviewQuestions extends Component {\r\n\r\n    fomatdate = (date) => {\r\n        var monthNames = [\r\n          \"January\", \"February\", \"March\",\r\n          \"April\", \"May\", \"June\", \"July\",\r\n          \"August\", \"September\", \"October\",\r\n          \"November\", \"December\"\r\n        ];\r\n    \r\n        var day = date.getDate();\r\n        var monthIndex = date.getMonth();\r\n        var year = date.getFullYear();\r\n    \r\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n      }\r\n      componentDidMount() {\r\n        this.props.getJobsByEmail(this.props.user.email);\r\n      }\r\n      handleViewDetails = (id) => {\r\n        this.props.history.push('/user/myjobs/' + id);\r\n      }\r\n    render() {\r\n        const { autheticated } = this.props.auth;\r\n        if (!autheticated) {\r\n          this.props.history.push('/');\r\n        }\r\n        const { jobs } = this.props;\r\n        return (\r\n            <div>\r\n                 <Fragment>\r\n       {jobs.length>0?<Table celled>\r\n          <Table.Header>\r\n            <Table.Row >\r\n              <Table.HeaderCell>Sr.No</Table.HeaderCell>\r\n              <Table.HeaderCell>Job Title</Table.HeaderCell>\r\n              <Table.HeaderCell>Company</Table.HeaderCell>\r\n              <Table.HeaderCell>Created at</Table.HeaderCell>\r\n              <Table.HeaderCell>Actions</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {jobs.map((job, index) => (\r\n              <Table.Row warning>\r\n                <Table.Cell>{index + 1}</Table.Cell>\r\n                <Table.Cell>{job.jobTitle}</Table.Cell>\r\n                <Table.Cell> {job.company}</Table.Cell>\r\n                <Table.Cell>{this.fomatdate(new Date(job.postedOn))}</Table.Cell>\r\n                <Table.Cell> <GridColumn><Button color='teal' onClick={() => this.handleViewDetails(job.id)}>View Details</Button></GridColumn></Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n\r\n          </Table.Body>\r\n        </Table>\r\n        :<Fragment><br/><Header as='h3' color='heal'>You have not created any jobs as of now.</Header></Fragment>\r\n        }\r\n        <Button as={Link} to='/user/createnewjob' content='Add New Job' primary floated='right' />\r\n      </Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyInterviewQuestions);","import React, { Component } from 'react';\r\n\r\nclass UpdateUser extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Update Profile\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateUser;","import React, { Component } from 'react'\r\nimport { Grid } from 'semantic-ui-react';\r\nimport {Route} from 'react-router-dom';\r\nimport Profile from './Profile';\r\nimport MyJobs from './MyJobs';\r\nimport CreateJobForm from '../Jobs/CreateJob/CreateJobForm';\r\nimport JobDetails from './Jobs/JobDetails';\r\nimport AddNewInterviewQuestions from './AddNewInterviewQuestions';\r\nimport MyInterviewQuestions from './MyInterviewQuestions';\r\nimport UpdateUser from './UpdateUser'\r\n\r\nexport default class UserDashboard extends Component {\r\n    render() {\r\n        return (\r\n            <Grid>\r\n            <Grid.Column width={16}>\r\n                <Route path=\"/user/profile\" component={Profile} />\r\n                <Route exact path=\"/user/myjobs\" component={MyJobs} />\r\n                <Route exact path=\"/user/myjobs/:id\" component={JobDetails} />\r\n                <Route path=\"/user/createnewjob\" component={CreateJobForm} />\r\n                <Route path=\"/user/createNewInterviewQuestions\" component={AddNewInterviewQuestions} />\r\n                <Route path=\"/user/myInterviewQuestions\" component={MyInterviewQuestions} />\r\n                <Route path=\"/user/update\" component={UpdateUser} />\r\n                \r\n            </Grid.Column>   \r\n            \r\n        </Grid>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { incrementCounter,decrementCounter} from './TestActions';\r\nconst mapStateToProps =(state)=>({\r\n    localData:state.test.data,\r\n    loading:state.test.loading\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n    incrementCounter,\r\n    decrementCounter\r\n}\r\n\r\n class TestComponent extends Component {\r\n    handleIncrementCounter = ()=>{\r\n        this.props.incrementCounter(2);\r\n    }\r\n    handleDecrementCounter = () =>{\r\n        this.props.decrementCounter(1);\r\n    }\r\n    render() {\r\n        //destructing props object\r\n        const {localData} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Test Component</h1>\r\n                <h3>{localData}</h3>\r\n                <Button onClick={this.handleIncrementCounter} positive content='+'></Button>\r\n                <Button onClick={this.handleDecrementCounter} negative content='-'></Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TestComponent);","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./TestConstants\"\r\n\r\nexport const incrementCounterAsync =(counter)=>{\r\n    return{\r\n        type:INCREMENT_COUNTER,\r\n        payload:counter\r\n        \r\n    }\r\n}\r\n\r\nexport const incrementCounter =(counter)=>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{\r\n            dispatch(incrementCounterAsync(counter));\r\n        },1000)\r\n    }\r\n}\r\n\r\nexport const decrementCounter =(counter)=>{\r\n    return{\r\n        type:DECREMENT_COUNTER,\r\n        payload:counter\r\n    }\r\n}","export const INCREMENT_COUNTER ='INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';","import React, { Component, Fragment } from 'react'\r\nimport {Segment,Label,Button,Container,Header,Icon,Dimmer,Loader,Modal } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport{ getJobById,uploadResume,dismissJobAppliedSuceesModal,applyJob} from './HomeActions';\r\nimport { connect } from 'react-redux';\r\nimport{withRouter} from 'react-router';\r\n\r\nconst mapStateToProps=(state)=>({\r\n  jobs:state.jobs,\r\n  auth:state.auth\r\n})\r\nconst mapDispatchToProps={\r\n  getJobById,\r\n  uploadResume,\r\n  dismissJobAppliedSuceesModal,\r\n  applyJob\r\n}\r\nclass Jobdetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      fileName: '',\r\n      file: {},\r\n      jobId: '',\r\n      disableApplyButton: true,\r\n    };\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.applyJob = this.applyJob.bind(this);\r\n  }\r\n  closeModal = () =>{\r\n    this.props.dismissJobAppliedSuceesModal()\r\n  }\r\n  handleOnChange = (id, e) => {\r\n    this.setState({\r\n      fileName: e.target.files[0].name,\r\n      file: e.target.files[0],\r\n      jobId: id\r\n    });\r\n  }\r\n  uploadResume = (job) => {\r\n    this.props.uploadResume(this.state.file,job.id);\r\n  }\r\n  closeModal = () =>{\r\n    this.props.dismissJobAppliedSuceesModal()\r\n  }\r\n   componentDidMount(){\r\n     this.props.getJobById(this.props.match.params.job)\r\n  }\r\n  applyJob = () =>{\r\n   \r\n    if(!this.props.auth.autheticated){\r\n      this.props.history.push('/login');\r\n    }else{\r\n      this.props.applyJob(this.props.jobs.job.data.id,this.props.auth.user.id);\r\n    }\r\n  }\r\n    render() {\r\n      const{ jobAppliedSucessModal} = this.props.jobs;\r\n      if(!this.props.jobs.job.data){\r\n        return <div/>\r\n      }\r\n       const{ jobs } = this.props;\r\n       const {loading} = this.props.jobs;\r\n\r\n        return (\r\n           <Fragment>\r\n              {loading===true ? <Dimmer active>\r\n                    <Loader />\r\n                </Dimmer>:''}\r\n              <Button floated='right' color='teal' as={Link} to='/'><Icon name='backward'></Icon>Go To Home</Button>\r\n           <Container text style={{ marginTop: '7em' }}>\r\n              <Header as='h1'>{jobs.job.data.jobTitle}</Header>\r\n              <p>Company:{jobs.job.data.company.toString()}</p>\r\n              <p>Skills:{jobs.job.data.city.toString()}</p>\r\n          <p>Skills:{jobs.job.data.skills.toString()}</p>\r\n          <span>Job Description:<pre style={{whiteSpace:'pre-line'}}>{jobs.job.data.jobDescription.toString()}</pre></span><br/>\r\n          <p>Experience:{jobs.job.data.experienceFrom} To {jobs.job.data.experienceTo} Years</p>\r\n          <p>Salary:{jobs.job.data.salaryFrom} To {jobs.job.data.salaryTo} LPA</p>\r\n         \r\n         \r\n\r\n          \r\n          <Button floated='right'  primary content=\"Apply for this job\" onClick={this.applyJob} />\r\n          <br/>\r\n        </Container>\r\n        \r\n        <Modal\r\n          open={jobAppliedSucessModal}\r\n          size=\"small\">\r\n          <Modal.Content>\r\n            <p>\r\n              You have succesfully applied for the job: <b>{jobs.job.data.jobTitle}</b> at {jobs.job.data.company.toString()}\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button primary onClick={this.closeModal}>\r\n              <Icon name='close' /> Close\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Jobdetails))","import React,{Fragment} from 'react';\r\nimport './App.css';\r\nimport Navbar from './features/navbar/Navbar';\r\nimport AuthHome from './features/Login/AuthHome';\r\nimport { Route } from 'react-router-dom';\r\nimport Dashboard from './features/Jobs/JobsDashboard/Dashboard';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Home from './features/Home/Home';\r\nimport CreateJobForm from './features/Jobs/CreateJob/CreateJobForm';\r\nimport RegisterForm from './features/Login/RegisterForm';\r\nimport UserDashboard from './features/User/UserDashboard';\r\nimport TestComponent from './Test/TestComponent';\r\nimport Jobdetails from './features/Home/Jobdetails';\r\nimport Profile from './features/User/Profile';\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div >\r\n      <Navbar/><br/><br/>\r\n      <Container className=\"main\" >\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Route exact path=\"/jobDetails/:job\" component={Jobdetails}/>\r\n        <Route exact path=\"/dashboard\" component={Dashboard}/>\r\n        <Route exact path=\"/login\" component={AuthHome}/>\r\n        <Route exact path=\"/register\" component={RegisterForm}/>\r\n        <Route exact path=\"/create\" component={CreateJobForm}/>\r\n        <Route path=\"/user\" component={UserDashboard}/>\r\n        <Route path=\"/test\" component={TestComponent}/>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./TestConstants\";\r\n\r\nconst initialState = {\r\n    data : 42,\r\n    loading :false\r\n}\r\n\r\nconst TestRedcuer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case INCREMENT_COUNTER:\r\n            return{...state,data:state.data+action.payload}\r\n        case DECREMENT_COUNTER:\r\n                return{...state,data:state.data-action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default TestRedcuer;","import { \r\n    GET_JOBS,ITEMS_LOADING, SET_CITY,SET_COMPANY,\r\n     SET_SKILL,ADD_JOB,DESABLE_LOADING,\r\n     LAUNCH_JOB_APPLIED_SUCCESS_MODAL, \r\n     DISMISS_JOB_APPLIED_SUCCESS_MODAL,\r\n     LAUNCH_JOB_CREATED_SUCCESS_MODAL,\r\n     DISMISS_JOB_CREATED_SUCCESS_MODAL,\r\n    SET_SAL,CLEAR_FILTERS,\r\n    SET_EXP,GET_RECENT_JOBS, GET_JOB_BY_ID,SET_JOB} from \"./HomeConstants\"\r\n\r\nconst initialState={\r\n    jobs:[],\r\n    job:{},\r\n    loading:false,\r\n    skill:'',\r\n    city:'',\r\n    company:'',\r\n    exp:'',\r\n    salary:'',\r\n    jobAppliedSucessModal:false,\r\n    jobCreatedSucessModal:false\r\n}\r\n\r\nexport const HomeReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n            case GET_JOBS:\r\n            return{\r\n                ...state,\r\n                jobs:action.payload,\r\n                loading:false\r\n            }\r\n            case SET_JOB:\r\n                return{\r\n                    ...state,\r\n                    job:action.payload\r\n            }\r\n            case ITEMS_LOADING:\r\n                return{\r\n                    ...state,\r\n                    loading:true\r\n                }\r\n            case DESABLE_LOADING:\r\n                return{\r\n                    ...state,\r\n                    loading:false\r\n                }\r\n            case SET_CITY:\r\n                return{\r\n                    ...state,\r\n                    city:action.payload\r\n                }\r\n            case SET_COMPANY:{\r\n                    return{\r\n                        ...state,\r\n                        company:action.payload\r\n                    }\r\n                }\r\n            case SET_SAL:{\r\n                    return{\r\n                        ...state,\r\n                        salary:action.payload\r\n                    }\r\n                }\r\n            case SET_EXP:{\r\n                return{\r\n                    ...state,\r\n                    exp:action.payload\r\n                }\r\n            } \r\n            case SET_SKILL:{\r\n                return{\r\n                    ...state,\r\n                    skill:action.payload\r\n                }\r\n            }\r\n            case ADD_JOB:{\r\n                return{\r\n                    ...state\r\n                }\r\n            }\r\n            case LAUNCH_JOB_APPLIED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    jobAppliedSucessModal:true\r\n                }\r\n            }\r\n            case DISMISS_JOB_APPLIED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    jobAppliedSucessModal:false\r\n                }\r\n            }\r\n            case LAUNCH_JOB_CREATED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    loading:false,\r\n                    jobCreatedSucessModal:true\r\n                    \r\n                }\r\n            }\r\n            case DISMISS_JOB_CREATED_SUCCESS_MODAL:{\r\n                return{\r\n                    ...state,\r\n                    jobCreatedSucessModal:false\r\n                }\r\n            }\r\n            case CLEAR_FILTERS:{\r\n                return{\r\n                    ...state,\r\n                    company:'',\r\n                    exp:'',\r\n                    salary:'',\r\n                }\r\n            }\r\n            case GET_RECENT_JOBS:{\r\n            return{\r\n                ...state,\r\n                jobs:action.payload,\r\n                loading:false\r\n            }\r\n        }\r\n        case GET_JOB_BY_ID:{\r\n            return{\r\n                ...state,\r\n                job:action.payload,\r\n                loading:false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {LODING,DISABLE_LOADING, DO_LOGIN, DO_LOGOUT, DO_REGISTER,ADD_ERROR } from './LoginConstants';\r\n\r\nconst initialState={\r\n    loading:false,\r\n    user:{},\r\n    autheticated:false,\r\n    error:'',\r\n    registrationSuceessMessage:''\r\n}\r\n\r\nexport const AuthReducer = (state=initialState,action)=>{\r\n\r\n    switch(action.type){\r\n        case LODING:{\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        }\r\n        case DISABLE_LOADING:{\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        }\r\n        case DO_LOGIN:{\r\n            console.log('payload:'+JSON.stringify(action.payload));\r\n            if(action.payload.id){\r\n                return {\r\n                    ...state,\r\n                    user:action.payload,\r\n                    loading:false,\r\n                    autheticated:true,\r\n                    error:'',\r\n                    registrationSuceessMessage:''\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    user:action.payload,\r\n                    loading:false,\r\n                    autheticated:false\r\n                }\r\n            }\r\n           \r\n        }\r\n        case DO_LOGOUT:{\r\n            return{\r\n                ...state,\r\n                user:action.payload,\r\n                loading:false,\r\n                autheticated:false,\r\n                error:''\r\n            }\r\n        }\r\n        case DO_REGISTER:{\r\n            return{\r\n                ...state,\r\n                user:action.payload,\r\n                loading:false,\r\n                error:'',\r\n                registrationSuceessMessage:'Registration successful and proceed with login'\r\n            }\r\n        }\r\n        case ADD_ERROR:{\r\n            return{\r\n                ...state,\r\n                error:action.payload,\r\n                loading:false\r\n            }\r\n        }\r\n        default:\r\n                return state;\r\n    }\r\n}","import { GET_JOBS_BY_EMAIL } from \"./UserConstants\"\r\n\r\nconst initialState={\r\n    jobs:[]\r\n}\r\nexport const UserReducer =(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case GET_JOBS_BY_EMAIL:{\r\n            return{\r\n                ...state,\r\n                jobs:action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport TestRedcuer from \"../Test/TestReducer\";\r\nimport { HomeReducer } from \"../features/Home/HomeReducer\";\r\nimport { AuthReducer } from \"../features/Login/AuthReducer\";\r\nimport { UserReducer } from \"../features/User/UserReducer\";\r\n\r\nexport const RootReducer = combineReducers({\r\n    test:TestRedcuer,\r\n    jobs:HomeReducer,\r\n    auth:AuthReducer,\r\n    user:UserReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './store/ConfigureStore';\r\n\r\nconst rootElement = document.getElementById('root');\r\nconst store = ConfigureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter> \r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>, \r\nrootElement);\r\n\r\n","import { createStore,applyMiddleware ,compose } from \"redux\"\r\nimport { RootReducer } from \"../reducers/RootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const ConfigureStore  = () =>{\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(RootReducer,composeEnhancers(applyMiddleware(thunk)));\r\n    return store;\r\n}"],"sourceRoot":""}